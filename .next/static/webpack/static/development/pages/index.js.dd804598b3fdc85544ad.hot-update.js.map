{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.dd804598b3fdc85544ad.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge\r\n} from '@shopify/polaris';\r\n\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  state = {\r\n      bars: [\r\n          { id: 1, name: 'My first shipping bar 1' },\r\n          { id: 2, name: 'My first shipping bar 2' },\r\n      ],\r\n      templates: [\r\n        { id: 1, name: 'My first shipping template 1', img: 'template1.png' },\r\n        { id: 2, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 3, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 4, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 5, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 6, name: 'My first shipping template 2', img: 'template1.png' },\r\n      ],\r\n      name: 'My first free shipping bar',\r\n      goal: '100',\r\n  };\r\n  renderDashboardTableData() {\r\n      return this.state.bars.map((bar, index) => {\r\n        const { id, name } = bar\r\n        return (\r\n            <tr className=\"Polaris-DataTable__TableRow\" key={id}>\r\n              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                <Stack>\r\n                  <Badge status=\"success\">Active</Badge>\r\n                  {name}\r\n                </Stack>\r\n              </td>\r\n              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                <Stack>\r\n                  <Button primary>Edit</Button>\r\n                  <Button>Duplicate</Button>\r\n                  <Button>Activate</Button>\r\n                </Stack>\r\n                </td>\r\n            </tr>\r\n        )\r\n      })\r\n  }\r\n  render() {\r\n    const { name, goal } = this.state;\r\n\r\n    return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section oneHalf>\r\n              <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button primary>Create New Bar</Button>\r\n                  </Stack.Item>\r\n                </Stack>\r\n                <div className=\"Polaris-DataTable\">\r\n                  <div className=\"Polaris-DataTable__ScrollContainer\">\r\n                    <table id='bars' className=\"Polaris-DataTable__Table\"> \r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {this.renderDashboardTableData()}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Form onSubmit={this.handleSubmit}>\r\n          <Layout oneHalf>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Basic Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className={fsbStyles.fsg-tp-container}>\r\n                              <div style=\"background-color: rgb(30, 30, 32); color: rgb(242, 202, 128); text-align: center; font-size: 16px; font-weight: normal; line-height: 20px; margin: 0px; padding: 12px 10px; overflow: hidden; width: 100%; border: none; font-family: Helvetica;\">\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                            \r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Prenium Template\" sectioned>\r\n                          <FormLayout>\r\n                          <TextField\r\n                              value={goal}\r\n                              onChange={this.handleChange('goal')}\r\n                              label=\"Free Shipping Goal\"\r\n                              type=\"goal\"\r\n                            />\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n        </Layout>\r\n        <Stack distribution=\"trailing\">\r\n            <Button primary submit>\r\n              Save\r\n            </Button>\r\n        </Stack>\r\n        </Form>\r\n      </Page>\r\n    );\r\n  }\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      name: this.state.name,\r\n      goal: this.state.goal\r\n    });\r\n    console.log('submission', this.state);\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n}\r\nexport default FreeShippingBar;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAgBA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAdA;AACA;AA2GA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAtGA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAOA;AACA;;;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAQA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AAAA;AACA;AAAA;AAAA;AAOA;;;;AA5GA;AACA;AAuHA;;;;A","sourceRoot":""}