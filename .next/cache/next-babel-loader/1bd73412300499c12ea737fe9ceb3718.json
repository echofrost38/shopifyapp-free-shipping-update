{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle, DataTable, Heading, Badge, Select, Checkbox, ChoiceList } from '@shopify/polaris';\nimport fsbStyles from './styles/free-shipping-bar.module.css';\nimport { LoneAnonymousOperationRule } from 'graphql';\n\nvar FreeShippingBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(FreeShippingBar, _React$Component);\n\n  var _super = _createSuper(FreeShippingBar);\n\n  function FreeShippingBar() {\n    var _this;\n\n    _classCallCheck(this, FreeShippingBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      bars: [{\n        id: 1,\n        name: 'My first shipping bar 1',\n        active: 0\n      }, {\n        id: 2,\n        name: 'My first shipping bar 2',\n        active: 1\n      }],\n      templates: [{\n        id: 1,\n        name: 'My first shipping template 1',\n        img: 'template1.png'\n      }, {\n        id: 2,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 3,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 4,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 5,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 6,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }],\n      position_options: [{\n        label: 'Top bar pushes down the rest of the page',\n        value: 'top_push_v1'\n      }, {\n        label: 'Top bar pushes down the rest of the page (always visible while scrolling)',\n        value: 'top_push_sticky_v1'\n      }, {\n        label: 'Top bar overlaps top of the page',\n        value: 'top_cover_nonsticky'\n      }, {\n        label: ' Top bar overlaps top of the page (always visible while scrolling)',\n        value: 'top_cover'\n      }, {\n        label: 'Bottom bar overlaps bottom of the page (always visible while scrolling)',\n        value: 'bottom_cover'\n      }, {\n        label: 'Manual Placement – Allows manual insertion of the bar’s code into your theme.',\n        value: 'inserted'\n      }],\n      currencies: [{\n        label: 'United states - USD',\n        value: '$'\n      }, {\n        label: 'United states - USD',\n        value: '$'\n      }, {\n        label: 'United states - USD',\n        value: '$'\n      }],\n      name: 'My first free shipping bar',\n      goal: '100',\n      goal_two: '150',\n      init_msg_start: 'Free shipping for orders over',\n      init_msg_end: '',\n      goal_msg: \"Congratulations! You've got free shipping\",\n      progress_msg_start: 'Only',\n      progress_msg_end: ' away from free shipping',\n      link_opt: 0,\n      link_url: 'https://apps.shopify.com/partners/me',\n      is_link_new: 0,\n      is_close_btn: 0,\n      position: 'top_push_sticky_v1',\n      currency: '$'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      _this.setState({\n        name: _this.state.name,\n        goal: _this.state.goal\n      });\n\n      console.log('submission', _this.state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(FreeShippingBar, [{\n    key: \"render\",\n    value: function render() {\n      var _ref, _ref2, _ref3, _ref4, _ref5;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          goal = _this$state.goal,\n          goal_two = _this$state.goal_two,\n          init_msg_start = _this$state.init_msg_start,\n          init_msg_end = _this$state.init_msg_end,\n          progress_msg_start = _this$state.progress_msg_start,\n          progress_msg_end = _this$state.progress_msg_end,\n          goal_msg = _this$state.goal_msg,\n          link_opt = _this$state.link_opt,\n          link_url = _this$state.link_url,\n          is_link_new = _this$state.is_link_new,\n          is_close_btn = _this$state.is_close_btn,\n          position = _this$state.position,\n          position_options = _this$state.position_options,\n          currencies = _this$state.currencies,\n          currency = _this$state.currency;\n      return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, {\n        oneHalf: true\n      }, __jsx(Card, {\n        sectioned: true\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(Heading, null, \"Free Shipping Bar (FSB) Dashboard\")), __jsx(Stack.Item, null, __jsx(Button, {\n        primary: true\n      }, \"Create New Bar\"))), __jsx(\"div\", {\n        className: \"Polaris-DataTable\"\n      }, __jsx(\"div\", {\n        className: \"Polaris-DataTable__ScrollContainer\"\n      }, __jsx(\"table\", {\n        id: \"bars\",\n        className: \"Polaris-DataTable__Table\"\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n        className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n      }, \"Name\"), __jsx(\"th\", {\n        className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n      }, \"Actions\"))), __jsx(\"tbody\", null, this.renderDashboardTableData()))))))), __jsx(Form, {\n        onSubmit: this.handleSubmit\n      }, __jsx(Layout, null, __jsx(Layout.Section, {\n        oneThird: true\n      }, __jsx(Card, {\n        title: \"Basic Template\",\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(\"div\", {\n        className: \"fsb_tp_container\"\n      }, __jsx(\"div\", {\n        className: \"fsbStyles.fsb_tb_content\",\n        style: (_ref = {\n          backgroundColor: \"rgb(30, 30, 32)\",\n          color: \"rgb(242, 202, 128)\"\n        }, _defineProperty(_ref, \"backgroundColor\", \"rgb(30, 30, 32)\"), _defineProperty(_ref, \"color\", \"rgb(242, 202, 128)\"), _defineProperty(_ref, \"textAlign\", \"center\"), _defineProperty(_ref, \"fontSize\", \"16px\"), _defineProperty(_ref, \"fontWeight\", \"normal\"), _defineProperty(_ref, \"lineheight\", \"20px\"), _defineProperty(_ref, \"padding\", \"12px\"), _defineProperty(_ref, \"fontFamily\", \"Helvetica\"), _ref)\n      }, \"Bold and Clear\")), __jsx(\"div\", {\n        className: \"fsb_tp_container\"\n      }, __jsx(\"div\", {\n        className: \"fsb_tb_content\",\n        style: (_ref2 = {\n          backgroundColor: \"rgb(30, 30, 32)\",\n          color: \"rgb(242, 202, 128)\"\n        }, _defineProperty(_ref2, \"backgroundColor\", \"rgb(30, 30, 32)\"), _defineProperty(_ref2, \"color\", \"rgb(242, 202, 128)\"), _defineProperty(_ref2, \"textAlign\", \"center\"), _defineProperty(_ref2, \"fontSize\", \"16px\"), _defineProperty(_ref2, \"fontWeight\", \"normal\"), _defineProperty(_ref2, \"lineheight\", \"20px\"), _defineProperty(_ref2, \"padding\", \"12px\"), _defineProperty(_ref2, \"fontFamily\", \"Helvetica\"), _ref2)\n      }, \"Bold and Clear\"))))), __jsx(Layout.Section, {\n        oneThird: true\n      }, __jsx(Card, {\n        title: \"Prenium Template\",\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(\"div\", {\n        className: \"fsb_tp_container\"\n      }, __jsx(\"div\", {\n        className: \"fsbStyles.fsb_tb_content\",\n        style: (_ref3 = {\n          backgroundColor: \"rgb(30, 30, 32)\",\n          color: \"rgb(242, 202, 128)\"\n        }, _defineProperty(_ref3, \"backgroundColor\", \"rgb(30, 30, 32)\"), _defineProperty(_ref3, \"color\", \"rgb(242, 202, 128)\"), _defineProperty(_ref3, \"textAlign\", \"center\"), _defineProperty(_ref3, \"fontSize\", \"16px\"), _defineProperty(_ref3, \"fontWeight\", \"normal\"), _defineProperty(_ref3, \"lineheight\", \"20px\"), _defineProperty(_ref3, \"padding\", \"12px\"), _defineProperty(_ref3, \"fontFamily\", \"Helvetica\"), _ref3)\n      }, \"Bold and Clear\")), __jsx(\"div\", {\n        className: \"fsb_tp_container\"\n      }, __jsx(\"div\", {\n        className: \"fsb_tb_content\",\n        style: (_ref4 = {\n          backgroundColor: \"rgb(30, 30, 32)\",\n          color: \"rgb(242, 202, 128)\"\n        }, _defineProperty(_ref4, \"backgroundColor\", \"rgb(30, 30, 32)\"), _defineProperty(_ref4, \"color\", \"rgb(242, 202, 128)\"), _defineProperty(_ref4, \"textAlign\", \"center\"), _defineProperty(_ref4, \"fontSize\", \"16px\"), _defineProperty(_ref4, \"fontWeight\", \"normal\"), _defineProperty(_ref4, \"lineheight\", \"20px\"), _defineProperty(_ref4, \"padding\", \"12px\"), _defineProperty(_ref4, \"fontFamily\", \"Helvetica\"), _ref4)\n      }, \"Bold and Clear\")))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n        title: \"Preview\",\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(\"div\", {\n        className: \"fsb_tp_container\"\n      }, __jsx(\"div\", {\n        className: \"fsb_tb_content\",\n        style: (_ref5 = {\n          backgroundColor: \"rgb(30, 30, 32)\",\n          color: \"rgb(242, 202, 128)\"\n        }, _defineProperty(_ref5, \"backgroundColor\", \"rgb(30, 30, 32)\"), _defineProperty(_ref5, \"color\", \"rgb(242, 202, 128)\"), _defineProperty(_ref5, \"textAlign\", \"center\"), _defineProperty(_ref5, \"fontSize\", \"16px\"), _defineProperty(_ref5, \"fontWeight\", \"normal\"), _defineProperty(_ref5, \"lineheight\", \"20px\"), _defineProperty(_ref5, \"padding\", \"12px\"), _defineProperty(_ref5, \"fontFamily\", \"Helvetica\"), _ref5)\n      }, \"My first shipping bar1\")))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n        title: \"Content Configuration\",\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: name,\n        onChange: this.handleChange('name'),\n        label: \"Name: \",\n        type: \"text\",\n        helpText: \"For your own internal reference - only you can see it\"\n      }), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        value: goal,\n        onChange: this.handleChange('goal'),\n        label: \"Free Shipping Goal: \",\n        type: \"number\",\n        helpText: \"If no minimum order value is required, please set goal to 0\"\n      }), __jsx(Button, {\n        primary: true\n      }, \"Add Secondary Goal\")), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        value: goal_two,\n        onChange: this.handleChange('goal_two'),\n        label: \"Free Shipping Secondary Goal: \",\n        type: \"number\",\n        helpText: \"Secondary goal needs to be greater than the 1st free shipping goal\"\n      }), __jsx(Button, {\n        primary: true\n      }, \"Remove Secondary Goal\")), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        value: init_msg_start,\n        onChange: this.handleChange('init_msg_start'),\n        label: \"Initial Message: \",\n        type: \"text\",\n        helpText: \"Display when cart is empty\"\n      }), __jsx(\"div\", {\n        className: \"fsb_msg_price\"\n      }, \"$100\"), __jsx(TextField, {\n        value: init_msg_end,\n        onChange: this.handleChange('init_msg_end'),\n        label: \" \",\n        type: \"text\"\n      })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n        value: progress_msg_start,\n        onChange: this.handleChange('progress_msg_start'),\n        label: \"Progress Message: \",\n        type: \"text\",\n        helpText: \"Displays when cart value is less than the goal\"\n      }), __jsx(\"div\", {\n        className: \"fsb_msg_price\"\n      }, \"$99\"), __jsx(TextField, {\n        value: progress_msg_end,\n        onChange: this.handleChange('progress_msg_end'),\n        label: \" \",\n        type: \"text\"\n      })), __jsx(TextField, {\n        value: goal_msg,\n        onChange: this.handleChange('goal_msg'),\n        label: \"Goal Achieved Message:: \",\n        type: \"text\",\n        helpText: \"Displays when cart value is greater than goal\"\n      }), __jsx(Select, {\n        label: \"Add Link to the Bar (optional):\",\n        options: [{\n          label: 'ON',\n          value: 1\n        }, {\n          label: 'OFF',\n          value: 0\n        }],\n        onChange: this.handleChange('link_opt'),\n        value: link_opt,\n        helpText: \"The bar will be clickable after adding a link\"\n      }), __jsx(TextField, {\n        value: link_url,\n        onChange: this.handleChange('link_url'),\n        label: \"Link URL:\",\n        type: \"text\",\n        helpText: \"This address will be visited after clicking the bar\"\n      }), __jsx(Checkbox, {\n        label: \"Open the link in a NEW tab when clicked\",\n        checked: is_link_new,\n        onChange: this.handleChange('is_link_new')\n      }), __jsx(Select, {\n        label: \"Include Close Button:\",\n        options: [{\n          label: 'YES',\n          value: 1\n        }, {\n          label: 'NO',\n          value: 0\n        }],\n        onChange: this.handleChange('is_close_btn'),\n        value: is_close_btn,\n        helpText: \"Places an \\\"x\\\" button on the bar so that users can close it manually\"\n      }), __jsx(ChoiceList, {\n        title: \"Select a Display Position:\",\n        choices: position_options,\n        selected: position,\n        onChange: this.handleChange('position')\n      }))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n        title: \"Currency Configuration\",\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(Select, {\n        label: \"Currency:\",\n        options: currencies,\n        onChange: this.handleChange('currency'),\n        value: currency,\n        helpText: \"Places an \\\"x\\\" button on the bar so that users can close it manually\"\n      }))))), __jsx(Stack, {\n        distribution: \"trailing\"\n      }, __jsx(Button, {\n        primary: true,\n        submit: true\n      }, \"Save\"))));\n    }\n  }, {\n    key: \"renderDashboardTableData\",\n    value: function renderDashboardTableData() {\n      return this.state.bars.map(function (bar, index) {\n        var id = bar.id,\n            name = bar.name;\n        return __jsx(\"tr\", {\n          className: \"Polaris-DataTable__TableRow\",\n          key: id\n        }, __jsx(\"td\", {\n          className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n        }, __jsx(Stack, null, __jsx(Badge, {\n          status: \"success\"\n        }, \"Active\"), name)), __jsx(\"td\", {\n          className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n        }, __jsx(Stack, null, __jsx(Button, {\n          primary: true\n        }, \"Edit\"), __jsx(Button, null, \"Duplicate\"), __jsx(Button, null, \"Activate\"))));\n      });\n    }\n  }]);\n\n  return FreeShippingBar;\n}(React.Component);\n\nexport default FreeShippingBar;","map":{"version":3,"sources":["E:/WORSPACE/shopify/work/shopifyapp-shipping-bar/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","DataTable","Heading","Badge","Select","Checkbox","ChoiceList","fsbStyles","LoneAnonymousOperationRule","FreeShippingBar","bars","id","name","active","templates","img","position_options","label","value","currencies","goal","goal_two","init_msg_start","init_msg_end","goal_msg","progress_msg_start","progress_msg_end","link_opt","link_url","is_link_new","is_close_btn","position","currency","setState","state","console","log","field","renderDashboardTableData","handleSubmit","backgroundColor","color","handleChange","map","bar","index","React","Component"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge,\r\n  Select,\r\n  Checkbox,\r\n  ChoiceList\r\n\r\n} from '@shopify/polaris';\r\n\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\nimport { LoneAnonymousOperationRule } from 'graphql';\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  state = {\r\n      bars: [\r\n          { id: 1, name: 'My first shipping bar 1',active:0 },\r\n          { id: 2, name: 'My first shipping bar 2',active:1 },\r\n      ],\r\n      templates: [\r\n        { id: 1, name: 'My first shipping template 1', img: 'template1.png' },\r\n        { id: 2, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 3, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 4, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 5, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 6, name: 'My first shipping template 2', img: 'template1.png' },\r\n      ],\r\n      position_options : [\r\n          {label: 'Top bar pushes down the rest of the page', value: 'top_push_v1'},\r\n          {label: 'Top bar pushes down the rest of the page (always visible while scrolling)', value: 'top_push_sticky_v1'},\r\n          {label: 'Top bar overlaps top of the page', value: 'top_cover_nonsticky'},\r\n          {label: ' Top bar overlaps top of the page (always visible while scrolling)', value: 'top_cover'},\r\n          {label: 'Bottom bar overlaps bottom of the page (always visible while scrolling)', value: 'bottom_cover'},\r\n          {label: 'Manual Placement – Allows manual insertion of the bar’s code into your theme.', value: 'inserted'},\r\n      ],\r\n      currencies : [\r\n        {label: 'United states - USD', value: '$'},\r\n        {label: 'United states - USD', value: '$'},\r\n        {label: 'United states - USD', value: '$'}\r\n      ],\r\n      name: 'My first free shipping bar',\r\n      goal: '100',\r\n      goal_two: '150',\r\n      init_msg_start: 'Free shipping for orders over',\r\n      init_msg_end: '',\r\n      goal_msg: \"Congratulations! You've got free shipping\",\r\n      progress_msg_start: 'Only',\r\n      progress_msg_end: ' away from free shipping',\r\n      link_opt: 0,\r\n      link_url: 'https://apps.shopify.com/partners/me',\r\n      is_link_new: 0,\r\n      is_close_btn: 0,\r\n      position: 'top_push_sticky_v1',\r\n      currency: '$',\r\n  };\r\n\r\n  render() {\r\n    const { name, goal,goal_two, init_msg_start, init_msg_end, progress_msg_start, progress_msg_end, goal_msg, link_opt, link_url,is_link_new, is_close_btn, position, position_options, currencies, currency } = this.state;\r\n\r\n    return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section oneHalf>\r\n              <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button primary>Create New Bar</Button>\r\n                  </Stack.Item>\r\n                </Stack>\r\n                <div className=\"Polaris-DataTable\">\r\n                  <div className=\"Polaris-DataTable__ScrollContainer\">\r\n                    <table id='bars' className=\"Polaris-DataTable__Table\"> \r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {this.renderDashboardTableData()}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Layout>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Basic Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Prenium Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Preview\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      My first shipping bar1\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Content Configuration\" sectioned>\r\n                          <FormLayout>\r\n                          <TextField\r\n                              value={name}\r\n                              onChange={this.handleChange('name')}\r\n                              label=\"Name: \"\r\n                              type=\"text\"\r\n                              helpText=\"For your own internal reference - only you can see it\"\r\n                            />\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={goal}\r\n                              onChange={this.handleChange('goal')}\r\n                              label=\"Free Shipping Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"If no minimum order value is required, please set goal to 0\"\r\n                            />\r\n                            <Button primary>Add Secondary Goal</Button>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={goal_two}\r\n                              onChange={this.handleChange('goal_two')}\r\n                              label=\"Free Shipping Secondary Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"Secondary goal needs to be greater than the 1st free shipping goal\"\r\n                            />\r\n                            <Button primary>Remove Secondary Goal</Button>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={init_msg_start}\r\n                              onChange={this.handleChange('init_msg_start')}\r\n                              label=\"Initial Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Display when cart is empty\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">$100</div>\r\n                             <TextField\r\n                              value={init_msg_end}\r\n                              onChange={this.handleChange('init_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={progress_msg_start}\r\n                              onChange={this.handleChange('progress_msg_start')}\r\n                              label=\"Progress Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is less than the goal\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">$99</div>\r\n                             <TextField\r\n                              value={progress_msg_end}\r\n                              onChange={this.handleChange('progress_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <TextField\r\n                              value={goal_msg}\r\n                              onChange={this.handleChange('goal_msg')}\r\n                              label=\"Goal Achieved Message:: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is greater than goal\"\r\n                            />    \r\n                            <Select\r\n                              label=\"Add Link to the Bar (optional):\"\r\n                              options={[\r\n                                {label: 'ON', value: 1},\r\n                                {label: 'OFF', value: 0},\r\n                              ]}\r\n                              onChange={this.handleChange('link_opt')}\r\n                              value={link_opt}\r\n                              helpText=\"The bar will be clickable after adding a link\"\r\n                            />\r\n                            <TextField\r\n                              value={link_url}\r\n                              onChange={this.handleChange('link_url')}\r\n                              label=\"Link URL:\"\r\n                              type=\"text\"\r\n                              helpText=\"This address will be visited after clicking the bar\"\r\n                            />\r\n                            <Checkbox\r\n                              label=\"Open the link in a NEW tab when clicked\"\r\n                              checked={is_link_new}\r\n                              onChange={this.handleChange('is_link_new')}\r\n                            />\r\n                            <Select\r\n                              label=\"Include Close Button:\"\r\n                              options={[\r\n                                {label: 'YES', value: 1},\r\n                                {label: 'NO', value: 0},\r\n                              ]}\r\n                              onChange={this.handleChange('is_close_btn')}\r\n                              value={is_close_btn}\r\n                              helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                            />\r\n                            <ChoiceList\r\n                              title=\"Select a Display Position:\"\r\n                              choices={position_options}\r\n                              selected={position}\r\n                              onChange={this.handleChange('position')}\r\n                            />\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card title=\"Currency Configuration\" sectioned>\r\n                <FormLayout>\r\n                  <Select\r\n                      label=\"Currency:\"\r\n                      options={currencies}\r\n                      onChange={this.handleChange('currency')}\r\n                      value={currency}\r\n                      helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                    />               \r\n                </FormLayout>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Stack distribution=\"trailing\">\r\n              <Button primary submit>\r\n                Save\r\n              </Button>\r\n          </Stack>\r\n        </Form>\r\n      </Page>\r\n    );\r\n  }\r\n  renderDashboardTableData() {\r\n    return this.state.bars.map((bar, index) => {\r\n      const { id, name } = bar\r\n      return (\r\n          <tr className=\"Polaris-DataTable__TableRow\" key={id}>\r\n            <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n              <Stack>\r\n                <Badge status=\"success\">Active</Badge>\r\n                {name}\r\n              </Stack>\r\n            </td>\r\n            <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n              <Stack>\r\n                <Button primary>Edit</Button>\r\n                <Button>Duplicate</Button>\r\n                <Button>Activate</Button>\r\n              </Stack>\r\n              </td>\r\n          </tr>\r\n      )\r\n    })\r\n}\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      name: this.state.name,\r\n      goal: this.state.goal\r\n    });\r\n    console.log('submission', this.state);\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n}\r\nexport default FreeShippingBar;"]},"metadata":{},"sourceType":"module"}