{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle, DataTable, Heading, Badge } from '@shopify/polaris';\nimport fsbStyles from './styles/free-shipping-bar.module.css';\n\nclass FreeShippingBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      bars: [{\n        id: 1,\n        name: 'My first shipping bar 1',\n        active: 0\n      }, {\n        id: 2,\n        name: 'My first shipping bar 2',\n        active: 1\n      }],\n      templates: [{\n        id: 1,\n        name: 'My first shipping template 1',\n        img: 'template1.png'\n      }, {\n        id: 2,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 3,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 4,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 5,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 6,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }],\n      name: 'My first free shipping bar',\n      goal: '100'\n    });\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      this.setState({\n        name: this.state.name,\n        goal: this.state.goal\n      });\n      console.log('submission', this.state);\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n  }\n\n  renderDashboardTableData() {\n    return this.state.bars.map((bar, index) => {\n      const {\n        id,\n        name\n      } = bar;\n      return __jsx(\"tr\", {\n        className: \"Polaris-DataTable__TableRow\",\n        key: id\n      }, __jsx(\"td\", {\n        className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n      }, __jsx(Stack, null, __jsx(Badge, {\n        status: \"success\"\n      }, \"Active\"), name)), __jsx(\"td\", {\n        className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n      }, __jsx(Stack, null, __jsx(Button, {\n        primary: true\n      }, \"Edit\"), __jsx(Button, null, \"Duplicate\"), __jsx(Button, null, \"Activate\"))));\n    });\n  } //   renderDashboardTableData() {\n  //     return this.state.bars.map((bar, index) => {\n  //       const { id, name } = bar\n  //       return (\n  //       )\n  //     })\n  // }\n\n\n  render() {\n    const {\n      name,\n      goal\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, {\n      oneHalf: true\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Stack, null, __jsx(Stack.Item, {\n      fill: true\n    }, __jsx(Heading, null, \"Free Shipping Bar (FSB) Dashboard\")), __jsx(Stack.Item, null, __jsx(Button, {\n      primary: true\n    }, \"Create New Bar\"))), __jsx(\"div\", {\n      className: \"Polaris-DataTable\"\n    }, __jsx(\"div\", {\n      className: \"Polaris-DataTable__ScrollContainer\"\n    }, __jsx(\"table\", {\n      id: \"bars\",\n      className: \"Polaris-DataTable__Table\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n    }, \"Name\"), __jsx(\"th\", {\n      className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n    }, \"Actions\"))), __jsx(\"tbody\", null, this.renderDashboardTableData()))))))), __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(Layout, null, __jsx(Layout.Section, {\n      oneThird: true\n    }, __jsx(Card, {\n      title: \"Basic Template\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsbStyles.fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\")), __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\"))))), __jsx(Layout.Section, {\n      oneThird: true\n    }, __jsx(Card, {\n      title: \"Prenium Template\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsbStyles.fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\")), __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\")))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Preview\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"My first shipping bar1\")))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Content Configuration\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: name,\n      onChange: this.handleChange('name'),\n      label: \"Name: \",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: goal,\n      onChange: this.handleChange('goal'),\n      label: \"Free Shipping Goal: \",\n      type: \"number\"\n    })), __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: init_message_start,\n      onChange: this.handleChange('init_message_start'),\n      label: \"Initial Message: \",\n      type: \"text\"\n    }), __jsx(TextField, {\n      value: init_message_end,\n      onChange: this.handleChange('init_message_end'),\n      label: \"Initial Message: \",\n      type: \"text\"\n    })))))), __jsx(Stack, {\n      distribution: \"trailing\"\n    }, __jsx(Button, {\n      primary: true,\n      submit: true\n    }, \"Save\"))));\n  }\n\n}\n\nexport default FreeShippingBar;","map":{"version":3,"sources":["E:/WORSPACE/shopify/work/shopifyapp-shipping-bar/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","DataTable","Heading","Badge","fsbStyles","FreeShippingBar","React","Component","bars","id","name","active","templates","img","goal","setState","state","console","log","field","value","renderDashboardTableData","map","bar","index","render","handleSubmit","backgroundColor","color","textAlign","fontSize","fontWeight","lineheight","padding","fontFamily","handleChange","init_message_start","init_message_end"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge\r\n} from '@shopify/polaris';\r\n\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  state = {\r\n      bars: [\r\n          { id: 1, name: 'My first shipping bar 1',active:0 },\r\n          { id: 2, name: 'My first shipping bar 2',active:1 },\r\n      ],\r\n      templates: [\r\n        { id: 1, name: 'My first shipping template 1', img: 'template1.png' },\r\n        { id: 2, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 3, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 4, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 5, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 6, name: 'My first shipping template 2', img: 'template1.png' },\r\n      ],\r\n      name: 'My first free shipping bar',\r\n      goal: '100',\r\n  };\r\n  renderDashboardTableData() {\r\n      return this.state.bars.map((bar, index) => {\r\n        const { id, name } = bar\r\n        return (\r\n            <tr className=\"Polaris-DataTable__TableRow\" key={id}>\r\n              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                <Stack>\r\n                  <Badge status=\"success\">Active</Badge>\r\n                  {name}\r\n                </Stack>\r\n              </td>\r\n              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                <Stack>\r\n                  <Button primary>Edit</Button>\r\n                  <Button>Duplicate</Button>\r\n                  <Button>Activate</Button>\r\n                </Stack>\r\n                </td>\r\n            </tr>\r\n        )\r\n      })\r\n  }\r\n//   renderDashboardTableData() {\r\n//     return this.state.bars.map((bar, index) => {\r\n//       const { id, name } = bar\r\n//       return (\r\n\r\n//       )\r\n//     })\r\n// }\r\n  render() {\r\n    const { name, goal } = this.state;\r\n\r\n    return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section oneHalf>\r\n              <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button primary>Create New Bar</Button>\r\n                  </Stack.Item>\r\n                </Stack>\r\n                <div className=\"Polaris-DataTable\">\r\n                  <div className=\"Polaris-DataTable__ScrollContainer\">\r\n                    <table id='bars' className=\"Polaris-DataTable__Table\"> \r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {this.renderDashboardTableData()}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Layout>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Basic Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Prenium Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Preview\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      My first shipping bar1\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Content Configuration\" sectioned>\r\n                          <FormLayout>\r\n                          <TextField\r\n                              value={name}\r\n                              onChange={this.handleChange('name')}\r\n                              label=\"Name: \"\r\n                              type=\"text\"\r\n                            />\r\n                          \r\n                            <TextField\r\n                              value={goal}\r\n                              onChange={this.handleChange('goal')}\r\n                              label=\"Free Shipping Goal: \"\r\n                              type=\"number\"\r\n                            />\r\n                          </FormLayout>\r\n                          <FormLayout>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={init_message_start}\r\n                              onChange={this.handleChange('init_message_start')}\r\n                              label=\"Initial Message: \"\r\n                              type=\"text\"\r\n                            />\r\n                             <TextField\r\n                              value={init_message_end}\r\n                              onChange={this.handleChange('init_message_end')}\r\n                              label=\"Initial Message: \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Stack distribution=\"trailing\">\r\n              <Button primary submit>\r\n                Save\r\n              </Button>\r\n          </Stack>\r\n        </Form>\r\n      </Page>\r\n    );\r\n  }\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      name: this.state.name,\r\n      goal: this.state.goal\r\n    });\r\n    console.log('submission', this.state);\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n}\r\nexport default FreeShippingBar;"]},"metadata":{},"sourceType":"module"}