{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle, DataTable, Heading, Badge } from '@shopify/polaris';\nimport fsbStyles from './styles/free-shipping-bar.module.css';\n\nclass FreeShippingBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      bars: [{\n        id: 1,\n        name: 'My first shipping bar 1'\n      }, {\n        id: 2,\n        name: 'My first shipping bar 2'\n      }],\n      templates: [{\n        id: 1,\n        name: 'My first shipping template 1',\n        img: 'template1.png'\n      }, {\n        id: 2,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 3,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 4,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 5,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 6,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }],\n      name: 'My first free shipping bar',\n      goal: '100'\n    });\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      this.setState({\n        name: this.state.name,\n        goal: this.state.goal\n      });\n      console.log('submission', this.state);\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n  }\n\n  renderDashboardTableData() {\n    return this.state.bars.map((bar, index) => {\n      const {\n        id,\n        name\n      } = bar;\n      return __jsx(\"tr\", {\n        class: \"Polaris-DataTable__TableRow\",\n        key: id\n      }, __jsx(\"td\", {\n        class: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n      }, __jsx(Stack, null, __jsx(Badge, {\n        status: \"success\"\n      }, \"Active\"), name)), __jsx(\"td\", {\n        class: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n      }, __jsx(Stack, null, __jsx(Button, {\n        primary: true\n      }, \"Edit\"), __jsx(Button, null, \"Duplicate\"), __jsx(Button, null, \"Activate\"))));\n    });\n  }\n\n  render() {\n    const {\n      name,\n      goal\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Stack, null, __jsx(Stack.Item, {\n      fill: true\n    }, __jsx(Heading, null, \"Free Shipping Bar (FSB) Dashboard\")), __jsx(Stack.Item, null, __jsx(Button, {\n      primary: true\n    }, \"Create New Bar\"))), __jsx(\"div\", {\n      class: \"Polaris-DataTable\"\n    }, __jsx(\"div\", {\n      class: \"Polaris-DataTable__ScrollContainer\"\n    }, __jsx(\"table\", {\n      id: \"bars\",\n      class: \"Polaris-DataTable__Table\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      class: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n    }, \"Name\"), __jsx(\"th\", {\n      class: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n    }, \"Actions\"))), __jsx(\"tbody\", null, this.renderDashboardTableData()))))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(Stack, null, __jsx(Stack.item, null, __jsx(Card, {\n      title: \"Templates\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: name,\n      onChange: this.handleChange('name'),\n      label: \"Name\",\n      type: \"name\"\n    }), __jsx(TextField, {\n      value: goal,\n      onChange: this.handleChange('goal'),\n      label: \"Free Shipping Goal\",\n      type: \"goal\"\n    }))))), __jsx(Stack, {\n      distribution: \"trailing\"\n    }, __jsx(Button, {\n      primary: true,\n      submit: true\n    }, \"Save\"))))));\n  }\n\n}\n\nexport default FreeShippingBar;","map":{"version":3,"sources":["E:/WORSPACE/shopify/work/shopifyapp-shipping-bar/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","DataTable","Heading","Badge","fsbStyles","FreeShippingBar","React","Component","bars","id","name","templates","img","goal","setState","state","console","log","field","value","renderDashboardTableData","map","bar","index","render","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge\r\n} from '@shopify/polaris';\r\n\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  state = {\r\n      bars: [\r\n          { id: 1, name: 'My first shipping bar 1' },\r\n          { id: 2, name: 'My first shipping bar 2' },\r\n      ],\r\n      templates: [\r\n        { id: 1, name: 'My first shipping template 1', img: 'template1.png' },\r\n        { id: 2, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 3, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 4, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 5, name: 'My first shipping template 2', img: 'template1.png' },\r\n        { id: 6, name: 'My first shipping template 2', img: 'template1.png' },\r\n      ],\r\n      name: 'My first free shipping bar',\r\n      goal: '100',\r\n  };\r\n  renderDashboardTableData() {\r\n      return this.state.bars.map((bar, index) => {\r\n        const { id, name } = bar\r\n        return (\r\n            <tr class=\"Polaris-DataTable__TableRow\" key={id}>\r\n              <td class=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                <Stack>\r\n                  <Badge status=\"success\">Active</Badge>\r\n                  {name}\r\n                </Stack>\r\n              </td>\r\n              <td class=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                <Stack>\r\n                  <Button primary>Edit</Button>\r\n                  <Button>Duplicate</Button>\r\n                  <Button>Activate</Button>\r\n                </Stack>\r\n                </td>\r\n            </tr>\r\n        )\r\n      })\r\n  }\r\n  render() {\r\n    const { name, goal } = this.state;\r\n\r\n    return (\r\n        <Page>\r\n          <Layout>\r\n          <Layout.Section>\r\n            <Card sectioned>\r\n              <Stack>\r\n                <Stack.Item fill>\r\n                  <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <Button primary>Create New Bar</Button>\r\n                </Stack.Item>\r\n              </Stack>\r\n              <div class=\"Polaris-DataTable\">\r\n                <div class=\"Polaris-DataTable__ScrollContainer\">\r\n                  <table id='bars' class=\"Polaris-DataTable__Table\"> \r\n                    <thead>\r\n                      <tr>\r\n                        <th class=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                        <th class=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderDashboardTableData()}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n\r\n         <Layout>\r\n          <Layout.Section\r\n          >\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Stack>\r\n                <Stack.item>\r\n                <Card title=\"Templates\" sectioned>\r\n                    <FormLayout>\r\n                      <TextField\r\n                        value={name}\r\n                        onChange={this.handleChange('name')}\r\n                        label=\"Name\"\r\n                        type=\"name\"\r\n                      />\r\n                      <TextField\r\n                        value={goal}\r\n                        onChange={this.handleChange('goal')}\r\n                        label=\"Free Shipping Goal\"\r\n                        type=\"goal\"\r\n                      />\r\n                    </FormLayout>\r\n                </Card>\r\n                </Stack.item>\r\n              </Stack>\r\n              <Stack distribution=\"trailing\">\r\n                      <Button primary submit>\r\n                        Save\r\n                      </Button>\r\n              </Stack>\r\n            </Form>\r\n          </Layout.Section>\r\n        </Layout>\r\n      </Page>\r\n    );\r\n  }\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      name: this.state.name,\r\n      goal: this.state.goal\r\n    });\r\n    console.log('submission', this.state);\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n}\r\nexport default FreeShippingBar;"]},"metadata":{},"sourceType":"module"}