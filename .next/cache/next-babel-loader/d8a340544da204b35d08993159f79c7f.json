{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Card, Form, FormLayout, Layout, Page, SettingToggle, Stack, TextField, TextStyle, DataTable, Heading, Badge, Select, Checkbox, ChoiceList, ColorPicker, Popover, RangeSlider } from '@shopify/polaris';\nimport { hsbToHex, rgbToHsb } from '@shopify/polaris';\nimport PropTypes from 'prop-types';\nimport fsbStyles from './styles/free-shipping-bar.module.css';\nimport { LoneAnonymousOperationRule } from 'graphql';\n\nclass FreeShippingBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      this.setState({\n        name: this.state.name,\n        goal: this.state.goal\n      });\n      console.log('submission', this.state);\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    this.state = {\n      bars: [{\n        id: 1,\n        name: 'My first shipping bar 1',\n        active: 0\n      }, {\n        id: 2,\n        name: 'My first shipping bar 2',\n        active: 1\n      }],\n      templates: [{\n        id: 1,\n        name: 'My first shipping template 1',\n        img: 'template1.png'\n      }, {\n        id: 2,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 3,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 4,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 5,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }, {\n        id: 6,\n        name: 'My first shipping template 2',\n        img: 'template1.png'\n      }],\n      position_options: [{\n        label: 'Top bar pushes down the rest of the page',\n        value: 'top_push_v1'\n      }, {\n        label: 'Top bar pushes down the rest of the page (always visible while scrolling)',\n        value: 'top_push_sticky_v1'\n      }, {\n        label: 'Top bar overlaps top of the page',\n        value: 'top_cover_nonsticky'\n      }, {\n        label: ' Top bar overlaps top of the page (always visible while scrolling)',\n        value: 'top_cover'\n      }, {\n        label: 'Bottom bar overlaps bottom of the page (always visible while scrolling)',\n        value: 'bottom_cover'\n      }, {\n        label: 'Manual Placement – Allows manual insertion of the bar’s code into your theme.',\n        value: 'inserted'\n      }],\n      currencies: [{\n        label: 'United states - USD',\n        value: '$'\n      }, {\n        label: 'Netherland',\n        value: 'nzd'\n      }],\n      name: 'My first free shipping bar',\n      goal: '100',\n      goal_two: '150',\n      init_msg_start: 'Free shipping for orders over',\n      init_msg_end: '',\n      goal_msg: \"Congratulations! You've got free shipping\",\n      progress_msg_start: 'Only',\n      progress_msg_end: ' away from free shipping',\n      link_opt: 'off',\n      link_url: 'https://apps.shopify.com/partners/me',\n      is_link_new: 0,\n      is_close_btn: 'no',\n      position: 'top_push_sticky_v1',\n      currency: 'nzd',\n      cur_symbol: 'nzd',\n      is_auto_cur: 'on',\n      bg_color: '#312e59',\n      bg_color_opacity: 0.5,\n      isColorPickerOpen: false\n    };\n  }\n\n  render() {\n    const {\n      name,\n      goal,\n      goal_two,\n      init_msg_start,\n      init_msg_end,\n      progress_msg_start,\n      progress_msg_end,\n      goal_msg,\n      link_opt,\n      link_url,\n      is_link_new,\n      is_close_btn,\n      position,\n      position_options,\n      currencies,\n      currency,\n      cur_symbol,\n      is_auto_cur,\n      bg_color,\n      bg_color_opacity\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, {\n      oneHalf: true\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Stack, null, __jsx(Stack.Item, {\n      fill: true\n    }, __jsx(Heading, null, \"Free Shipping Bar (FSB) Dashboard\")), __jsx(Stack.Item, null, __jsx(Button, {\n      primary: true\n    }, \"Create New Bar\"))), __jsx(\"div\", {\n      className: \"Polaris-DataTable\"\n    }, __jsx(\"div\", {\n      className: \"Polaris-DataTable__ScrollContainer\"\n    }, __jsx(\"table\", {\n      id: \"bars\",\n      className: \"Polaris-DataTable__Table\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n    }, \"Name\"), __jsx(\"th\", {\n      className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\"\n    }, \"Actions\"))), __jsx(\"tbody\", null, this.renderDashboardTableData()))))))), __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(Layout, null, __jsx(Layout.Section, {\n      oneThird: true\n    }, __jsx(Card, {\n      title: \"Basic Template\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsbStyles.fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\")), __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\"))))), __jsx(Layout.Section, {\n      oneThird: true\n    }, __jsx(Card, {\n      title: \"Prenium Template\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsbStyles.fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\")), __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"Bold and Clear\")))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Preview\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(\"div\", {\n      className: \"fsb_tp_container\"\n    }, __jsx(\"div\", {\n      className: \"fsb_tb_content\",\n      style: {\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        backgroundColor: \"rgb(30, 30, 32)\",\n        color: \"rgb(242, 202, 128)\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        fontWeight: \"normal\",\n        lineheight: \"20px\",\n        padding: \"12px\",\n        fontFamily: \"Helvetica\"\n      }\n    }, \"My first shipping bar1\")))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Content Configuration\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: name,\n      onChange: this.handleChange('name'),\n      label: \"Name: \",\n      type: \"text\",\n      helpText: \"For your own internal reference - only you can see it\"\n    }), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: goal,\n      onChange: this.handleChange('goal'),\n      label: \"Free Shipping Goal: \",\n      type: \"number\",\n      helpText: \"If no minimum order value is required, please set goal to 0\"\n    }), __jsx(Button, {\n      primary: true\n    }, \"Add Secondary Goal\")), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: goal_two,\n      onChange: this.handleChange('goal_two'),\n      label: \"Free Shipping Secondary Goal: \",\n      type: \"number\",\n      helpText: \"Secondary goal needs to be greater than the 1st free shipping goal\"\n    }), __jsx(Button, {\n      primary: true\n    }, \"Remove Secondary Goal\")), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: init_msg_start,\n      onChange: this.handleChange('init_msg_start'),\n      label: \"Initial Message: \",\n      type: \"text\",\n      helpText: \"Display when cart is empty\"\n    }), __jsx(\"div\", {\n      className: \"fsb_msg_price\"\n    }, \"$100\"), __jsx(TextField, {\n      value: init_msg_end,\n      onChange: this.handleChange('init_msg_end'),\n      label: \" \",\n      type: \"text\"\n    })), __jsx(FormLayout.Group, null, __jsx(TextField, {\n      value: progress_msg_start,\n      onChange: this.handleChange('progress_msg_start'),\n      label: \"Progress Message: \",\n      type: \"text\",\n      helpText: \"Displays when cart value is less than the goal\"\n    }), __jsx(\"div\", {\n      className: \"fsb_msg_price\"\n    }, \"$99\"), __jsx(TextField, {\n      value: progress_msg_end,\n      onChange: this.handleChange('progress_msg_end'),\n      label: \" \",\n      type: \"text\"\n    })), __jsx(TextField, {\n      value: goal_msg,\n      onChange: this.handleChange('goal_msg'),\n      label: \"Goal Achieved Message:: \",\n      type: \"text\",\n      helpText: \"Displays when cart value is greater than goal\"\n    }), __jsx(Select, {\n      label: \"Add Link to the Bar (optional):\",\n      options: [{\n        label: 'ON',\n        value: 'on'\n      }, {\n        label: 'OFF',\n        value: 'off'\n      }],\n      onChange: this.handleChange('link_opt'),\n      value: link_opt,\n      helpText: \"The bar will be clickable after adding a link\"\n    }), __jsx(TextField, {\n      value: link_url,\n      onChange: this.handleChange('link_url'),\n      label: \"Link URL:\",\n      type: \"text\",\n      helpText: \"This address will be visited after clicking the bar\"\n    }), __jsx(Checkbox, {\n      label: \"Open the link in a NEW tab when clicked\",\n      checked: is_link_new,\n      onChange: this.handleChange('is_link_new')\n    }), __jsx(Select, {\n      label: \"Include Close Button:\",\n      options: [{\n        label: 'YES',\n        value: 'yes'\n      }, {\n        label: 'NO',\n        value: 'no'\n      }],\n      onChange: this.handleChange('is_close_btn'),\n      value: is_close_btn,\n      helpText: \"Places an \\\"x\\\" button on the bar so that users can close it manually\"\n    }), __jsx(ChoiceList, {\n      title: \"Select a Display Position:\",\n      choices: position_options,\n      selected: position,\n      onChange: this.handleChange('position')\n    }))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Currency Configuration\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(Select, {\n      label: \"Currency:\",\n      options: currencies,\n      onChange: this.handleChange('currency'),\n      value: currency,\n      helpText: \"Places an \\\"x\\\" button on the bar so that users can close it manually\"\n    }), __jsx(TextField, {\n      value: cur_symbol,\n      onChange: this.handleChange('cur_symbol'),\n      label: \"Currency Symbol::\",\n      type: \"text\"\n    }), __jsx(Select, {\n      label: \"Auto Currency Conversion::\",\n      options: [{\n        label: 'OFF',\n        value: 'on'\n      }, {\n        label: 'ON',\n        value: 'off'\n      }],\n      onChange: this.handleChange('is_auto_cur'),\n      value: is_auto_cur,\n      helpText: \"NOTE: If native Shopify multi-currencies is configured on your store, this Currency Configuration will be disabled. You can enable this if your website supports auto-currency detection. FSB auto-converts the goal value to the visitors' local currency\"\n    }))))), __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n      title: \"Style Configuration\",\n      sectioned: true\n    }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(\"div\", null, __jsx(ColorPicker, {\n      onChange: this.handleChange('bg_color'),\n      color: bg_color\n    }))), __jsx(RangeSlider, {\n      label: \"Background Color Opacity:\",\n      value: bg_color_opacity,\n      min: 0,\n      max: 1,\n      step: 0.1,\n      onChange: this.handleChange('bg_color_opacity'),\n      output: true\n    }), \"Background Images:\", __jsx(FormLayout.Group, null, __jsx(\"a\", {\n      href: \"\",\n      onClick: \"select_background_pic('img/bar_background/20170206_sales_01.png')\"\n    }, __jsx(\"div\", {\n      style: {\n        margin: \"10px 0\",\n        padding: \"10px\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        color: \"#FFFFFF\",\n        fontFamily: 'Roboto',\n        background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"\n      }\n    }, \"Sales\")), __jsx(\"a\", {\n      href: \"\",\n      onClick: \"select_background_pic('img/bar_background/20170206_sales_01.png')\"\n    }, __jsx(\"div\", {\n      style: {\n        margin: \"10px 0\",\n        padding: \"10px\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        color: \"#FFFFFF\",\n        fontFamily: 'Roboto',\n        background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"\n      }\n    }, \"Sales\")), __jsx(\"a\", {\n      href: \"\",\n      onClick: \"select_background_pic('img/bar_background/20170206_sales_01.png')\"\n    }, __jsx(\"div\", {\n      style: {\n        margin: \"10px 0\",\n        padding: \"10px\",\n        textAlign: \"center\",\n        fontSize: \"16px\",\n        color: \"#FFFFFF\",\n        fontFamily: 'Roboto',\n        background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"\n      }\n    }, \"Sales\"))))))), __jsx(Stack, {\n      distribution: \"trailing\"\n    }, __jsx(Button, {\n      primary: true,\n      submit: true\n    }, \"Save\"))));\n  }\n\n  renderDashboardTableData() {\n    return this.state.bars.map((bar, index) => {\n      const {\n        id,\n        name\n      } = bar;\n      return __jsx(\"tr\", {\n        className: \"Polaris-DataTable__TableRow\",\n        key: id\n      }, __jsx(\"td\", {\n        className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n      }, __jsx(Stack, null, __jsx(Badge, {\n        status: \"success\"\n      }, \"Active\"), name)), __jsx(\"td\", {\n        className: \"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\"\n      }, __jsx(Stack, null, __jsx(Button, {\n        primary: true\n      }, \"Edit\"), __jsx(Button, null, \"Duplicate\"), __jsx(Button, null, \"Activate\"))));\n    });\n  }\n\n}\n\nexport default FreeShippingBar;","map":{"version":3,"sources":["E:/WORSPACE/shopify/work/shopifyapp-shipping-bar/pages/index.js"],"names":["Button","Card","Form","FormLayout","Layout","Page","SettingToggle","Stack","TextField","TextStyle","DataTable","Heading","Badge","Select","Checkbox","ChoiceList","ColorPicker","Popover","RangeSlider","hsbToHex","rgbToHsb","PropTypes","fsbStyles","LoneAnonymousOperationRule","FreeShippingBar","React","Component","constructor","props","setState","name","state","goal","console","log","field","value","bars","id","active","templates","img","position_options","label","currencies","goal_two","init_msg_start","init_msg_end","goal_msg","progress_msg_start","progress_msg_end","link_opt","link_url","is_link_new","is_close_btn","position","currency","cur_symbol","is_auto_cur","bg_color","bg_color_opacity","isColorPickerOpen","render","renderDashboardTableData","handleSubmit","backgroundColor","color","textAlign","fontSize","fontWeight","lineheight","padding","fontFamily","handleChange","margin","background","map","bar","index"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge,\r\n  Select,\r\n  Checkbox,\r\n  ChoiceList,\r\n  ColorPicker,\r\n  Popover,\r\n  RangeSlider\r\n} from '@shopify/polaris';\r\nimport {hsbToHex, rgbToHsb} from '@shopify/polaris';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\nimport { LoneAnonymousOperationRule } from 'graphql';\r\n\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        bars: [\r\n            { id: 1, name: 'My first shipping bar 1',active:0 },\r\n            { id: 2, name: 'My first shipping bar 2',active:1 },\r\n        ],\r\n        templates: [\r\n          { id: 1, name: 'My first shipping template 1', img: 'template1.png' },\r\n          { id: 2, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 3, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 4, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 5, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 6, name: 'My first shipping template 2', img: 'template1.png' },\r\n        ],\r\n        position_options : [\r\n            {label: 'Top bar pushes down the rest of the page', value: 'top_push_v1'},\r\n            {label: 'Top bar pushes down the rest of the page (always visible while scrolling)', value: 'top_push_sticky_v1'},\r\n            {label: 'Top bar overlaps top of the page', value: 'top_cover_nonsticky'},\r\n            {label: ' Top bar overlaps top of the page (always visible while scrolling)', value: 'top_cover'},\r\n            {label: 'Bottom bar overlaps bottom of the page (always visible while scrolling)', value: 'bottom_cover'},\r\n            {label: 'Manual Placement – Allows manual insertion of the bar’s code into your theme.', value: 'inserted'},\r\n        ],\r\n        currencies : [\r\n          {label: 'United states - USD', value: '$'},\r\n          {label: 'Netherland', value: 'nzd'}\r\n        ],\r\n        name: 'My first free shipping bar',\r\n        goal: '100',\r\n        goal_two: '150',\r\n        init_msg_start: 'Free shipping for orders over',\r\n        init_msg_end: '',\r\n        goal_msg: \"Congratulations! You've got free shipping\",\r\n        progress_msg_start: 'Only',\r\n        progress_msg_end: ' away from free shipping',\r\n        link_opt: 'off',\r\n        link_url: 'https://apps.shopify.com/partners/me',\r\n        is_link_new: 0,\r\n        is_close_btn: 'no',\r\n        position: 'top_push_sticky_v1',\r\n        currency: 'nzd',\r\n        cur_symbol: 'nzd',\r\n        is_auto_cur: 'on',\r\n        bg_color: '#312e59',\r\n        bg_color_opacity: 0.5,\r\n        isColorPickerOpen: false,\r\n    };\r\n  }\r\n  render() {\r\n    const { name, goal,goal_two, init_msg_start, init_msg_end, progress_msg_start, progress_msg_end, goal_msg, link_opt, link_url,is_link_new, is_close_btn, position, position_options, currencies, currency,cur_symbol,is_auto_cur, bg_color, bg_color_opacity } = this.state;\r\n\r\n    return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section oneHalf>\r\n              <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button primary>Create New Bar</Button>\r\n                  </Stack.Item>\r\n                </Stack>\r\n                <div className=\"Polaris-DataTable\">\r\n                  <div className=\"Polaris-DataTable__ScrollContainer\">\r\n                    <table id='bars' className=\"Polaris-DataTable__Table\"> \r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {this.renderDashboardTableData()}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Layout>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Basic Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Prenium Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Preview\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      My first shipping bar1\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Content Configuration\" sectioned>\r\n                          <FormLayout>\r\n                          <TextField\r\n                              value={name}\r\n                              onChange={this.handleChange('name')}\r\n                              label=\"Name: \"\r\n                              type=\"text\"\r\n                              helpText=\"For your own internal reference - only you can see it\"\r\n                            />\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={goal}\r\n                              onChange={this.handleChange('goal')}\r\n                              label=\"Free Shipping Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"If no minimum order value is required, please set goal to 0\"\r\n                            />\r\n                            <Button primary>Add Secondary Goal</Button>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={goal_two}\r\n                              onChange={this.handleChange('goal_two')}\r\n                              label=\"Free Shipping Secondary Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"Secondary goal needs to be greater than the 1st free shipping goal\"\r\n                            />\r\n                            <Button primary>Remove Secondary Goal</Button>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={init_msg_start}\r\n                              onChange={this.handleChange('init_msg_start')}\r\n                              label=\"Initial Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Display when cart is empty\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">$100</div>\r\n                             <TextField\r\n                              value={init_msg_end}\r\n                              onChange={this.handleChange('init_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={progress_msg_start}\r\n                              onChange={this.handleChange('progress_msg_start')}\r\n                              label=\"Progress Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is less than the goal\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">$99</div>\r\n                             <TextField\r\n                              value={progress_msg_end}\r\n                              onChange={this.handleChange('progress_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <TextField\r\n                              value={goal_msg}\r\n                              onChange={this.handleChange('goal_msg')}\r\n                              label=\"Goal Achieved Message:: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is greater than goal\"\r\n                            />    \r\n                            <Select\r\n                              label=\"Add Link to the Bar (optional):\"\r\n                              options={[\r\n                                {label: 'ON', value: 'on'},\r\n                                {label: 'OFF', value: 'off'},\r\n                              ]}\r\n                              onChange={this.handleChange('link_opt')}\r\n                              value={link_opt}\r\n                              helpText=\"The bar will be clickable after adding a link\"\r\n                            />\r\n                            <TextField\r\n                              value={link_url}\r\n                              onChange={this.handleChange('link_url')}\r\n                              label=\"Link URL:\"\r\n                              type=\"text\"\r\n                              helpText=\"This address will be visited after clicking the bar\"\r\n                            />\r\n                            <Checkbox\r\n                              label=\"Open the link in a NEW tab when clicked\"\r\n                              checked={is_link_new}\r\n                              onChange={this.handleChange('is_link_new')}\r\n                            />\r\n                            <Select\r\n                              label=\"Include Close Button:\"\r\n                              options={[\r\n                                {label: 'YES', value: 'yes'},\r\n                                {label: 'NO', value: 'no'},\r\n                              ]}\r\n                              onChange={this.handleChange('is_close_btn')}\r\n                              value={is_close_btn}\r\n                              helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                            />\r\n                            <ChoiceList\r\n                              title=\"Select a Display Position:\"\r\n                              choices={position_options}\r\n                              selected={position}\r\n                              onChange={this.handleChange('position')}\r\n                            />\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card title=\"Currency Configuration\" sectioned>\r\n                <FormLayout>\r\n                    <Select\r\n                      label=\"Currency:\"\r\n                      options={currencies}\r\n                      onChange={this.handleChange('currency')}\r\n                      value={currency}\r\n                      helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                     />      \r\n                     <TextField\r\n                              value={cur_symbol}\r\n                              onChange={this.handleChange('cur_symbol')}\r\n                              label=\"Currency Symbol::\"\r\n                              type=\"text\"\r\n                      />         \r\n                      <Select\r\n                      label=\"Auto Currency Conversion::\"\r\n                      options={[\r\n                        {label: 'OFF', value: 'on'},\r\n                        {label: 'ON', value: 'off'}\r\n                      ]}\r\n                      onChange={this.handleChange('is_auto_cur')}\r\n                      value={is_auto_cur}\r\n                      helpText=\"NOTE: If native Shopify multi-currencies is configured on your store, this Currency Configuration will be disabled. You can enable this if your website supports auto-currency detection. FSB auto-converts the goal value to the visitors' local currency\"\r\n                      />\r\n                </FormLayout>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card title=\"Style Configuration\" sectioned>\r\n                <FormLayout>\r\n                    <FormLayout.Group>\r\n                      <div>\r\n                      <ColorPicker onChange={this.handleChange('bg_color')} color={bg_color} />\r\n                         {/* <Popover\r\n                            active={this.state.isColorPickerOpen}\r\n                            onClose={this.toggleColorPicker}\r\n                            activator={\r\n                            <TextField \r\n                                label={this.props.label} \r\n                                onChange={this.handleTextChange} \r\n                                value={this.state.textValue} \r\n                                connectedLeft=\r\n                                  {\r\n                                      <Button onClick={this.toggleColorPicker}>\r\n                                        <div className=\"color-preview\" style={{backgroundColor: this.props.color, width: '20px', height: '20px'}} > \r\n                                        </div>\r\n                                      </Button>\r\n                                  } \r\n                            />}\r\n                            >\r\n                            <ColorPicker \r\n                              onChange={(color) => this.props.onChange(hsbToHex(color))} color={this.formatHexToHsb(this.props.color)} \r\n                          />\r\n                          </Popover>  */}\r\n                      </div>\r\n                    </FormLayout.Group>\r\n                    <RangeSlider\r\n                      label=\"Background Color Opacity:\"\r\n                      value={bg_color_opacity}\r\n                      min={0}\r\n                      max={1}\r\n                      step={0.1}\r\n                      onChange={this.handleChange('bg_color_opacity')}\r\n                      output\r\n                    />\r\n                    Background Images:\r\n                    <FormLayout.Group>\r\n                        <a href=\"\" onClick=\"select_background_pic('img/bar_background/20170206_sales_01.png')\">\r\n                          <div style={{ margin: \"10px 0\", padding:\"10px\",textAlign: \"center\", fontSize:\"16px\", color:\"#FFFFFF\", fontFamily:'Roboto', background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"}}>Sales</div>\r\n                        </a>\r\n                        <a href=\"\" onClick=\"select_background_pic('img/bar_background/20170206_sales_01.png')\">\r\n                          <div style={{ margin: \"10px 0\", padding:\"10px\",textAlign: \"center\", fontSize:\"16px\", color:\"#FFFFFF\", fontFamily:'Roboto', background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"}}>Sales</div>\r\n                        </a>\r\n                        <a href=\"\" onClick=\"select_background_pic('img/bar_background/20170206_sales_01.png')\">\r\n                          <div style={{ margin: \"10px 0\", padding:\"10px\",textAlign: \"center\", fontSize:\"16px\", color:\"#FFFFFF\", fontFamily:'Roboto', background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"}}>Sales</div>\r\n                        </a>\r\n                    </FormLayout.Group>\r\n                </FormLayout>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Stack distribution=\"trailing\">\r\n              <Button primary submit>\r\n                Save\r\n              </Button>\r\n          </Stack>\r\n        </Form>\r\n      </Page>\r\n    );\r\n  }\r\n  renderDashboardTableData() {\r\n    return this.state.bars.map((bar, index) => {\r\n      const { id, name } = bar\r\n      return (\r\n          <tr className=\"Polaris-DataTable__TableRow\" key={id}>\r\n            <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n              <Stack>\r\n                <Badge status=\"success\">Active</Badge>\r\n                {name}\r\n              </Stack>\r\n            </td>\r\n            <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n              <Stack>\r\n                <Button primary>Edit</Button>\r\n                <Button>Duplicate</Button>\r\n                <Button>Activate</Button>\r\n              </Stack>\r\n              </td>\r\n          </tr>\r\n      )\r\n    })\r\n}\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      name: this.state.name,\r\n      goal: this.state.goal\r\n    });\r\n    console.log('submission', this.state);\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n}\r\nexport default FreeShippingBar;"]},"metadata":{},"sourceType":"module"}