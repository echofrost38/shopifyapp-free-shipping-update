{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/datas/countries.js","webpack:///./pages/index.js","webpack:///./pages/server/backgroundFunctions.js","webpack:///./pages/server/barFunctions.js","webpack:///./pages/server/fontFunctions.js","webpack:///./pages/server/shopFunctions.js","webpack:///./pages/server/templateFunctions.js","webpack:///external \"@shopify/javascript-utilities/decorators\"","webpack:///external \"@shopify/polaris\"","webpack:///external \"axios\"","webpack:///external \"country-currency-data\"","webpack:///external \"graphql\"","webpack:///external \"node-datetime\"","webpack:///external \"react\"","webpack:///external \"sweetalert\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export const countries = [\r\n    { label: \"Afghanistan\", value: \"Afghanistan\" },\r\n    { label: \"Albania\", value: \"Albania\" },\r\n    { label: \"Algeria\", value: \"Algeria\" },\r\n    { label: \"American Samoa\", value: \"American Samoa\" },\r\n    { label: \"AndorrA\", value: \"AndorrA\" },\r\n    { label: \"Angola\", value: \"Angola\" },\r\n    { label: \"Anguilla\", value: \"Anguilla\" },\r\n    { label: \"Antarctica\", value: \"Antarctica\" },\r\n    { label: \"Antigua and Barbuda\", value: \"Antigua and Barbuda\" },\r\n    { label: \"Argentina\", value: \"Argentina\" },\r\n    { label: \"Armenia\", value: \"Armenia\" },\r\n    { label: \"Aruba\", value: \"Aruba\" },\r\n    { label: \"Australia\", value: \"Australia\" },\r\n    { label: \"Austria\", value: \"Austria\" },\r\n    { label: \"Azerbaijan\", value: \"Azerbaijan\" },\r\n    { label: \"Bahamas\", value: \"Bahamas\" },\r\n    { label: \"Bahrain\", value: \"Bahrain\" },\r\n    { label: \"Bangladesh\", value: \"Bangladesh\" },\r\n    { label: \"Barbados\", value: \"Barbados\" },\r\n    { label: \"Belarus\", value: \"Belarus\" },\r\n    { label: \"Belgium\", value: \"Belgium\" },\r\n    { label: \"Belize\", value: \"Belize\" },\r\n    { label: \"Benin\", value: \"Benin\" },\r\n    { label: \"Bermuda\", value: \"Bermuda\" },\r\n    { label: \"Bhutan\", value: \"Bhutan\" },\r\n    { label: \"Bolivia\", value: \"Bolivia\" },\r\n    { label: \"Bosnia and Herzegovina\", value: \"Bosnia and Herzegovina\" },\r\n    { label: \"Botswana\", value: \"Botswana\" },\r\n    { label: \"Bouvet Island\", value: \"Bouvet Island\" },\r\n    { label: \"Brazil\", value: \"Brazil\" },\r\n    {\r\n      label: \"British Indian Ocean Territory\",\r\n      value: \"British Indian Ocean Territory\"\r\n    },\r\n    { label: \"Brunei Darussalam\", value: \"Brunei Darussalam\" },\r\n    { label: \"Bulgaria\", value: \"Bulgaria\" },\r\n    { label: \"Burkina Faso\", value: \"Burkina Faso\" },\r\n    { label: \"Burundi\", value: \"Burundi\" },\r\n    { label: \"Cambodia\", value: \"Cambodia\" },\r\n    { label: \"Cameroon\", value: \"Cameroon\" },\r\n    { label: \"Canada\", value: \"Canada\" },\r\n    { label: \"Cape Verde\", value: \"Cape Verde\" },\r\n    { label: \"Cayman Islands\", value: \"Cayman Islands\" },\r\n    { label: \"Central African Republic\", value: \"Central African Republic\" },\r\n    { label: \"Chad\", value: \"Chad\" },\r\n    { label: \"Chile\", value: \"Chile\" },\r\n    { label: \"China\", value: \"China\" },\r\n    { label: \"Christmas Island\", value: \"Christmas Island\" },\r\n    { label: \"Cocos (Keeling) Islands\", value: \"Cocos (Keeling) Islands\" },\r\n    { label: \"Colombia\", value: \"Colombia\" },\r\n    { label: \"Comoros\", value: \"Comoros\" },\r\n    { label: \"Congo\", value: \"Congo\" },\r\n    {\r\n      label: \"Congo, The Democratic Republic of the\",\r\n      value: \"Congo, The Democratic Republic of the\"\r\n    },\r\n    { label: \"Cook Islands\", value: \"Cook Islands\" },\r\n    { label: \"Costa Rica\", value: \"Costa Rica\" },\r\n    { label: \"Cote D'Ivoire\", value: \"Cote D'Ivoire\" },\r\n    { label: \"Croatia\", value: \"Croatia\" },\r\n    { label: \"Cuba\", value: \"Cuba\" },\r\n    { label: \"Cyprus\", value: \"Cyprus\" },\r\n    { label: \"Czech Republic\", value: \"Czech Republic\" },\r\n    { label: \"Denmark\", value: \"Denmark\" },\r\n    { label: \"Djibouti\", value: \"Djibouti\" },\r\n    { label: \"Dominica\", value: \"Dominica\" },\r\n    { label: \"Dominican Republic\", value: \"Dominican Republic\" },\r\n    { label: \"Ecuador\", value: \"Ecuador\" },\r\n    { label: \"Egypt\", value: \"Egypt\" },\r\n    { label: \"El Salvador\", value: \"El Salvador\" },\r\n    { label: \"Equatorial Guinea\", value: \"Equatorial Guinea\" },\r\n    { label: \"Eritrea\", value: \"Eritrea\" },\r\n    { label: \"Estonia\", value: \"Estonia\" },\r\n    { label: \"Ethiopia\", value: \"Ethiopia\" },\r\n    { label: \"Faroe Islands\", value: \"Faroe Islands\" },\r\n    { label: \"Fiji\", value: \"Fiji\" },\r\n    { label: \"Finland\", value: \"Finland\" },\r\n    { label: \"France\", value: \"France\" },\r\n    { label: \"French Guiana\", value: \"French Guiana\" },\r\n    { label: \"French Polynesia\", value: \"French Polynesia\" },\r\n    {\r\n      label: \"French Southern Territories\",\r\n      value: \"French Southern Territories\"\r\n    },\r\n    { label: \"Gabon\", value: \"Gabon\" },\r\n    { label: \"Gambia\", value: \"Gambia\" },\r\n    { label: \"Georgia\", value: \"Georgia\" },\r\n    { label: \"Germany\", value: \"Germany\" },\r\n    { label: \"Ghana\", value: \"Ghana\" },\r\n    { label: \"Gibraltar\", value: \"Gibraltar\" },\r\n    { label: \"Greece\", value: \"Greece\" },\r\n    { label: \"Greenland\", value: \"Greenland\" },\r\n    { label: \"Grenada\", value: \"Grenada\" },\r\n    { label: \"Guadeloupe\", value: \"Guadeloupe\" },\r\n    { label: \"Guam\", value: \"Guam\" },\r\n    { label: \"Guatemala\", value: \"Guatemala\" },\r\n    { label: \"Guernsey\", value: \"Guernsey\" },\r\n    { label: \"Guinea\", value: \"Guinea\" },\r\n    { label: \"Guinea-Bissau\", value: \"Guinea-Bissau\" },\r\n    { label: \"Guyana\", value: \"Guyana\" },\r\n    { label: \"Haiti\", value: \"Haiti\" },\r\n    {\r\n      label: \"Heard Island and Mcdonald Islands\",\r\n      value: \"Heard Island and Mcdonald Islands\"\r\n    },\r\n    { label: \"Honduras\", value: \"Honduras\" },\r\n    { label: \"Hong Kong\", value: \"Hong Kong\" },\r\n    { label: \"Hungary\", value: \"Hungary\" },\r\n    { label: \"Iceland\", value: \"Iceland\" },\r\n    { label: \"India\", value: \"India\" },\r\n    { label: \"Indonesia\", value: \"Indonesia\" },\r\n    { label: \"Iran, Islamic Republic Of\", value: \"Iran, Islamic Republic Of\" },\r\n    { label: \"Iraq\", value: \"Iraq\" },\r\n    { label: \"Ireland\", value: \"Ireland\" },\r\n    { label: \"Isle of Man\", value: \"Isle of Man\" },\r\n    { label: \"Israel\", value: \"Israel\" },\r\n    { label: \"Italy\", value: \"Italy\" },\r\n    { label: \"Jamaica\", value: \"Jamaica\" },\r\n    { label: \"Japan\", value: \"Japan\" },\r\n    { label: \"Jersey\", value: \"Jersey\" },\r\n    { label: \"Jordan\", value: \"Jordan\" },\r\n    { label: \"Kazakhstan\", value: \"Kazakhstan\" },\r\n    { label: \"Kenya\", value: \"Kenya\" },\r\n    { label: \"Kiribati\", value: \"Kiribati\" },\r\n    {\r\n      label: \"Korea, Democratic People's Republic of\",\r\n      value: \"Korea, Democratic People's Republic of\"\r\n    },\r\n    { label: \"Korea, Republic of\", value: \"Korea, Republic of\" },\r\n    { label: \"Kuwait\", value: \"Kuwait\" },\r\n    { label: \"Kyrgyzstan\", value: \"Kyrgyzstan\" },\r\n    {\r\n      label: \"Lao People's Democratic Republic\",\r\n      value: \"Lao People's Democratic Republic\"\r\n    },\r\n    { label: \"Latvia\", value: \"Latvia\" },\r\n    { label: \"Lebanon\", value: \"Lebanon\" },\r\n    { label: \"Lesotho\", value: \"Lesotho\" },\r\n    { label: \"Liberia\", value: \"Liberia\" },\r\n    { label: \"Libyan Arab Jamahiriya\", value: \"Libyan Arab Jamahiriya\" },\r\n    { label: \"Liechtenstein\", value: \"Liechtenstein\" },\r\n    { label: \"Lithuania\", value: \"Lithuania\" },\r\n    { label: \"Luxembourg\", value: \"Luxembourg\" },\r\n    { label: \"Macao\", value: \"Macao\" },\r\n    { label: \"Macedonia\", value: \"Macedonia\" },\r\n    { label: \"Madagascar\", value: \"Madagascar\" },\r\n    { label: \"Malawi\", value: \"Malawi\" },\r\n    { label: \"Malaysia\", value: \"Malaysia\" },\r\n    { label: \"Maldives\", value: \"Maldives\" },\r\n    { label: \"Mali\", value: \"Mali\" },\r\n    { label: \"Malta\", value: \"Malta\" },\r\n    { label: \"Marshall Islands\", value: \"Marshall Islands\" },\r\n    { label: \"Martinique\", value: \"Martinique\" },\r\n    { label: \"Mauritania\", value: \"Mauritania\" },\r\n    { label: \"Mauritius\", value: \"Mauritius\" },\r\n    { label: \"Mayotte\", value: \"Mayotte\" },\r\n    { label: \"Mexico\", value: \"Mexico\" },\r\n    { label: \"Moldova\", value: \"Moldova\" },\r\n    { label: \"Monaco\", value: \"Monaco\" },\r\n    { label: \"Mongolia\", value: \"Mongolia\" },\r\n    { label: \"Monteneg\", value: \"Monteneg\" },\r\n    { label: \"Montserr\", value: \"Montserr\" },\r\n    { label: \"Morocco\", value: \"Morocco\" },\r\n    { label: \"Mozambique\", value: \"Mozambique\" },\r\n    { label: \"Myanmar\", value: \"Myanmar\" },\r\n    { label: \"Namibia\", value: \"Namibia\" },\r\n    { label: \"Nauru\", value: \"Nauru\" },\r\n    { label: \"Nepal\", value: \"Nepal\" },\r\n    { label: \"Netherlands\", value: \"Netherlands\" },\r\n    { label: \"New Caledonia\", value: \"New Caledonia\" },\r\n    { label: \"New Zealand\", value: \"New Zealand\" },\r\n    { label: \"Nicaragua\", value: \"Nicaragua\" },\r\n    { label: \"Niger\", value: \"Niger\" },\r\n    { label: \"Nigeria\", value: \"Nigeria\" },\r\n    { label: \"Niue\", value: \"Niue\" },\r\n    { label: \"Norfolk Island\", value: \"Norfolk Island\" },\r\n    { label: \"Norway\", value: \"Norway\" },\r\n    { label: \"Oman\", value: \"Oman\" },\r\n    { label: \"Pakistan\", value: \"Pakistan\" },\r\n    { label: \"Palau\", value: \"Palau\" },\r\n    { label: \"Panama\", value: \"Panama\" },\r\n    { label: \"Papua New Guinea\", value: \"Papua New Guinea\" },\r\n    { label: \"Paraguay\", value: \"Paraguay\" },\r\n    { label: \"Peru\", value: \"Peru\" },\r\n    { label: \"Philippines\", value: \"Philippines\" },\r\n    { label: \"Pitcairn\", value: \"Pitcairn\" },\r\n    { label: \"Poland\", value: \"Poland\" },\r\n    { label: \"Portugal\", value: \"Portugal\" },\r\n    { label: \"Puerto Rico\", value: \"Puerto Rico\" },\r\n    { label: \"Qatar\", value: \"Qatar\" },\r\n    { label: \"Reunion\", value: \"Reunion\" },\r\n    { label: \"Romania\", value: \"Romania\" },\r\n    { label: \"Russia\", value: \"Russia\" },\r\n    { label: \"RWANDA\", value: \"RWANDA\" },\r\n    { label: \"Saint Helena\", value: \"Saint Helena\" },\r\n    { label: \"Saint Kitts and Nevis\", value: \"Saint Kitts and Nevis\" },\r\n    { label: \"Saint Lucia\", value: \"Saint Lucia\" },\r\n    { label: \"Saint Pierre and Miquelon\", value: \"Saint Pierre and Miquelon\" },\r\n    {\r\n      label: \"Saint Vincent and the Grenadines\",\r\n      value: \"Saint Vincent and the Grenadines\"\r\n    },\r\n    { label: \"Samoa\", value: \"Samoa\" },\r\n    { label: \"San Marino\", value: \"San Marino\" },\r\n    { label: \"Sao Tome and Principe\", value: \"Sao Tome and Principe\" },\r\n    { label: \"Saudi Arabia\", value: \"Saudi Arabia\" },\r\n    { label: \"Senegal\", value: \"Senegal\" },\r\n    { label: \"Serbia\", value: \"Serbia\" },\r\n    { label: \"Seychelles\", value: \"Seychelles\" },\r\n    { label: \"Sierra Leone\", value: \"Sierra Leone\" },\r\n    { label: \"Singapore\", value: \"Singapore\" },\r\n    { label: \"Slovakia\", value: \"Slovakia\" },\r\n    { label: \"Slovenia\", value: \"Slovenia\" },\r\n    { label: \"Solomon Islands\", value: \"Solomon Islands\" },\r\n    { label: \"Somalia\", value: \"Somalia\" },\r\n    { label: \"South Africa\", value: \"South Africa\" },\r\n    { label: \"Spain\", value: \"Spain\" },\r\n    { label: \"Sri Lanka\", value: \"Sri Lanka\" },\r\n    { label: \"Sudan\", value: \"Sudan\" },\r\n    { label: \"Suriname\", value: \"Suriname\" },\r\n    { label: \"Swaziland\", value: \"Swaziland\" },\r\n    { label: \"Sweden\", value: \"Sweden\" },\r\n    { label: \"Switzerland\", value: \"Switzerland\" },\r\n    { label: \"Syrian\", value: \"Syrian\" },\r\n    { label: \"Taiwan\", value: \"Taiwan\" },\r\n    { label: \"Tajikistan\", value: \"Tajikistan\" },\r\n    { label: \"Tanzania\", value: \"Tanzania\" },\r\n    { label: \"Thailand\", value: \"Thailand\" },\r\n    { label: \"Togo\", value: \"Togo\" },\r\n    { label: \"Tokelau\", value: \"Tokelau\" },\r\n    { label: \"Tonga\", value: \"Tonga\" },\r\n    { label: \"Trinidad and Tobago\", value: \"Trinidad and Tobago\" },\r\n    { label: \"Tunisia\", value: \"Tunisia\" },\r\n    { label: \"Turkey\", value: \"Turkey\" },\r\n    { label: \"Turkmenistan\", value: \"Turkmenistan\" },\r\n    { label: \"Turks and Caicos Islands\", value: \"Turks and Caicos Islands\" },\r\n    { label: \"Tuvalu\", value: \"Tuvalu\" },\r\n    { label: \"Uganda\", value: \"Uganda\" },\r\n    { label: \"Ukraine\", value: \"Ukraine\" },\r\n    { label: \"United Arab Emirates\", value: \"United Arab Emirates\" },\r\n    { label: \"United Kingdom\", value: \"United Kingdom\" },\r\n    { label: \"United States\", value: \"United States\" },\r\n    { label: \"Uruguay\", value: \"Uruguay\" },\r\n    { label: \"Uzbekistan\", value: \"Uzbekistan\" },\r\n    { label: \"Vanuatu\", value: \"Vanuatu\" },\r\n    { label: \"Venezuela\", value: \"Venezuela\" },\r\n    { label: \"Viet Nam\", value: \"Viet Nam\" },\r\n    { label: \"Virgin Islands\", value: \"Virgin Islands\" },\r\n    { label: \"Wallis and Futuna\", value: \"Wallis and Futuna\" },\r\n    { label: \"Western Sahara\", value: \"Western Sahara\" },\r\n    { label: \"Yemen\", value: \"Yemen\" },\r\n    { label: \"Zambia\", value: \"Zambia\" },\r\n    { label: \"Zimbab\", value: \"Zimbab\" }\r\n  ];\r\n  ","import {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge,\r\n  Select,\r\n  Checkbox,\r\n  ChoiceList,\r\n  ColorPicker,\r\n  Popover,\r\n  RangeSlider,\r\n  Collapsible,\r\n  Caption\r\n} from '@shopify/polaris';\r\nimport {  \r\n  hsbToRgb,\r\n  rgbToHsb,\r\n  rgbString\r\n} from '@shopify/polaris';\r\n\r\n\r\n\r\nimport { autobind } from \"@shopify/javascript-utilities/decorators\";\r\n\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\nimport { LoneAnonymousOperationRule } from 'graphql';\r\nimport { countries as countryOptions } from \"./datas/countries\";\r\nimport country_cur_data from 'country-currency-data';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nimport { getTemplateList } from \"./server/templateFunctions\";\r\nimport { getBackgroundList } from \"./server/backgroundFunctions\";\r\nimport { getFontList } from \"./server/fontFunctions\";\r\nimport { getBarList, addBar,activateBar,pauseBar, deleteBar,duplicateBar} from \"./server/barFunctions\";\r\nimport { getShopInfo} from \"./server/shopFunctions\";\r\n\r\nvar datetime = require('node-datetime');\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      let cur_data = [];\r\n\r\n      var today_datetime_create = datetime.create();\r\n      var today_dateTime = today_datetime_create.format('Y-m-dTH:M');\r\n      var today_datetime_create_end = datetime.create();\r\n      today_datetime_create_end.offsetInDays(3);\r\n      var today_dateTime_end = today_datetime_create_end.format('Y-m-dTH:M');\r\n\r\n      country_cur_data.map((citem, index) => {\r\n        cur_data.push({\r\n          label:citem.country + ' - ' + citem.code,\r\n          value: citem.code\r\n        })\r\n      })\r\n      this.state = {\r\n        img: '',\r\n        shop_id: 0,\r\n        bar_id: 0,\r\n        template_id: 0,\r\n        background_id: 0,\r\n        bg_color_js: 'eeeeee',\r\n        bars: [],\r\n        fonts: [],\r\n        templates: [],\r\n        backgrounds: [],\r\n        country_options: countryOptions,\r\n        position_options : [\r\n            {label: 'Top bar pushes down the rest of the page', value: 'top_push_v1'},\r\n            {label: 'Top bar pushes down the rest of the page (always visible while scrolling)', value: 'top_push_sticky_v1'},\r\n            {label: 'Top bar overlaps top of the page', value: 'top_cover_nonsticky'},\r\n            {label: ' Top bar overlaps top of the page (always visible while scrolling)', value: 'top_cover'},\r\n            {label: 'Bottom bar overlaps bottom of the page (always visible while scrolling)', value: 'bottom_cover'},\r\n            // {label: 'Manual Placement – Allows manual insertion of the bar’s code into your theme.', value: 'inserted'},\r\n        ],\r\n        currencies : cur_data,\r\n        name: 'My first free shipping bar',\r\n        goal: '100',\r\n        goal_sec: '150',\r\n        init_msg_start: 'Free shipping for orders over',\r\n        init_msg_end: '',\r\n        goal_msg: \"Congratulations! You've got free shipping\",\r\n        is_sec_goal: 0,\r\n        progress_msg_start: 'Only',\r\n        progress_msg_end: ' away from free shipping',\r\n        progress_msg_sec_start: 'You got free shipping, Only ',\r\n        progress_msg_sec_end: ' away from 2-day free shipping',\r\n        link_opt: 'off',\r\n        link_url: 'https://apps.shopify.com/partners/me',\r\n        is_link_new: 0,\r\n        is_close_btn: 'no',\r\n        position: 'top_push_sticky_v1',\r\n        currency: 'USD',\r\n        cur_symbol: '$',\r\n        is_auto_cur: 'off',\r\n        bg_color: ({\r\n          hue: 300,\r\n          brightness: 1,\r\n          saturation: 0.7,\r\n          alpha: 0.8\r\n        }),\r\n\r\n        bg_popoverActive: false,\r\n        text_popoverActive: false,\r\n        special_popoverActive: false,\r\n        \r\n        text_color: ({\r\n          hue: 300,\r\n          brightness: 1,\r\n          saturation: 0.7\r\n        }),\r\n        special_color: ({\r\n          hue: 300,\r\n          brightness: 1,\r\n          saturation: 0.7\r\n        }),\r\n        bg_color_opacity: '1',\r\n        font_size: '16',\r\n        font_family: 'Helvetica',\r\n        padding: '12',\r\n        disp_after: '0',\r\n        delay_before: '0',\r\n        time_fade: '3.5',\r\n        display_options : [\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'home'},\r\n          {label: \"Only on Page with URL (Copy and Paste the URL below)\", value: 'url'},\r\n          {label: 'All pages', value: 'keyword'},\r\n        ],\r\n        display_page: 'all',\r\n        exclude_options: [\r\n          {label: 'Do NOT exclude any page', value: 'no'},\r\n          {label: 'Homepage', value: 'home'},\r\n          {label: \"Only exclude Page with URL (Copy and Paste the URL below)\", value: 'url'},\r\n          {label: 'Only exclude Pages that contain the keyword in their URLs', value: 'keyword'},\r\n        ],\r\n        exclude_page: 'no',\r\n        dev_target_options: [\r\n          {label: 'Display on both desktop and mobile browsers. On mobile browsers font size will be capped to achieve optimum display', value: 'desktop'},\r\n          {label: 'Display only on desktop browsers', value: 'desktp'},\r\n          {label: 'HomepageDisplay only on mobile browsers', value: 'mobile'},\r\n        ],\r\n        dev_target: 'all',\r\n        schedule_options: [\r\n          {label: 'Always Display', value: 'no'},\r\n          {label: 'Only display within the giving period of time', value: 'yes'}\r\n        ],\r\n        schedule: 'no',\r\n        custom_code:'',\r\n        showForm: false,\r\n        content_active: true,\r\n        style_active: true,\r\n        targeting_active: true,\r\n        custome_code_active: true,\r\n        cur_active: true,\r\n        display_url: '',\r\n        display_keyword: '',\r\n        exclude_keyword: '',\r\n        exclude_url: '',\r\n        sch_start: today_dateTime,\r\n        sch_end: today_dateTime_end\r\n    };\r\n    \r\n    this.onChange = this.onChange.bind(this)\r\n    this.onChange_sch_start = this.onChange_sch_start.bind(this)\r\n    this.onChange_sch_end = this.onChange_sch_end.bind(this)\r\n    this.handleCancel = this.handleCancel.bind(this)\r\n    this.handleColorChange_bg = this.handleColorChange_bg.bind(this)\r\n    this.handleRgbChange_bg = this.handleRgbChange_bg.bind(this) \r\n      \r\n    getBarList().then(datas => {\r\n        this.setState({bars: [...datas]}, () => \r\n        {\r\n        }\r\n      )\r\n      \r\n    })\r\n    getTemplateList().then(datas => {\r\n      this.setState({templates: [...datas]}, \r\n        () => {\r\n        }\r\n      )\r\n    })\r\n    getFontList().then(datas => {\r\n      this.setState({fonts: [...datas]}, \r\n        () => {\r\n        }\r\n      )\r\n    })\r\n    getBackgroundList().then(datas => {\r\n      this.setState({backgrounds: [...datas]}, \r\n        () => {\r\n        }\r\n      )\r\n    })\r\n\r\n\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({bg_color_js: event.target.value})\r\n  }\r\n  onChange_sch_start = event => {\r\n    this.setState({sch_start: event.target.value})\r\n  }\r\n  onChange_sch_end = event => {\r\n    this.setState({sch_end: event.target.value})\r\n  }\r\n  handleContentToggle = () => {\r\n    this.setState({content_active: !this.state.content_active})\r\n  }\r\n  handleCurrencyToggle = () => {\r\n    this.setState({cur_active: !this.state.cur_active})\r\n  }\r\n  handleStyleToggle = () => {\r\n    this.setState({style_active: !this.state.style_active})\r\n  }\r\n  handleTargetingToggle = () => {\r\n    this.setState({targeting_active: !this.state.targeting_active})\r\n  }\r\n  handleCustomToggle = () => {\r\n    this.setState({custome_code_active: !this.state.custome_code_active})\r\n  }\r\n\r\n  //----bg_color----------\r\n  \r\n  hexToRgba(hex, alpha) {\r\n    let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        red: parseInt(result[1], 16),\r\n        green: parseInt(result[2], 16),\r\n        blue: parseInt(result[3], 16),\r\n        alpha: alpha\r\n    } : {\r\n        red: 0,\r\n        green: 0,\r\n        blue: 0,\r\n        alpha: alpha\r\n    };\r\n  }\r\n\r\n  rgbaStringtoHsb = (value) => {\r\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\r\n    let rgbaData = {\r\n      red: rgbValues[0],\r\n      green: rgbValues[1],\r\n      blue: rgbValues[2]\r\n    }\r\n    let bg_color_t = rgbToHsb(rgbaData)\r\n    bg_color_t.alpha = rgbValues[3]\r\n    return bg_color_t\r\n  }\r\n\r\n  handleColorChange_bg = (bg_color) => {\r\n    this.setState({ bg_color });\r\n  }\r\n\r\n  handleRgbChange_bg = (value) => {\r\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\r\n    let rgbaData = {\r\n      red: rgbValues[0],\r\n      green: rgbValues[1],\r\n      blue: rgbValues[2]\r\n    }\r\n    let bg_color_t = rgbToHsb(rgbaData)\r\n    bg_color_t.alpha = rgbValues[3]\r\n    this.setState({ bg_color: bg_color_t })\r\n  }\r\n\r\n  handlePopoverClose_bg = () => {\r\n    this.setState({ bg_popoverActive: false });\r\n  }\r\n\r\n  handlePopoverOpen_bg = () => {\r\n    this.setState({ bg_popoverActive: true });\r\n  }\r\n  //----text_color----------\r\n  handleColorChange_text = (text_color) => {\r\n    this.setState({ text_color });\r\n  }\r\n\r\n  handleRgbChange_text = (value) => {\r\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\r\n    const text_color = rgbToHsb({\r\n      red: rgbValues[0],\r\n      green: rgbValues[1],\r\n      blue: rgbValues[2]\r\n    });\r\n    this.setState({ text_color });\r\n  }\r\n\r\n  handlePopoverClose_text = () => {\r\n    this.setState({ text_popoverActive: false });\r\n  }\r\n\r\n  handlePopoverOpen_text = () => {\r\n    this.setState({ text_popoverActive: true });\r\n  }\r\n  //------special color------\r\n  handleColorChange_special = (special_color) => {\r\n    this.setState({ special_color });\r\n  }\r\n\r\n  handleRgbChange_special = (value) => {\r\n    const rgbValues = value.replace(/[^\\d*.?\\d*,]/g, \"\").split(\",\");\r\n    const special_color = rgbToHsb({\r\n      red: rgbValues[0],\r\n      green: rgbValues[1],\r\n      blue: rgbValues[2]\r\n    });\r\n    this.setState({ special_color });\r\n  }\r\n\r\n  handlePopoverClose_special = () => {\r\n    this.setState({ special_popoverActive: false });\r\n  }\r\n\r\n  handlePopoverOpen_special = () => {\r\n    this.setState({ special_popoverActive: true });\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    const { name, img, goal,goal_sec, init_msg_start, init_msg_end, progress_msg_start, progress_msg_end, progress_msg_sec_start, progress_msg_sec_end, goal_msg, link_opt, link_url,is_link_new, is_close_btn, position, position_options, currencies, currency,cur_symbol,is_auto_cur, bg_color,bg_popoverActive,text_popoverActive, special_popoverActive, text_color, special_color, bg_color_opacity, font_size, font_family, padding, disp_after, delay_before, time_fade,display_page,exclude_page,dev_target, display_options,exclude_options, dev_target_options, schedule_options, schedule,custom_code, bg_color_js, showForm, content_active, style_active, custome_code_active, targeting_active, cur_active, template_id, is_sec_goal, display_url,display_keyword, exclude_url, exclude_keyword, sch_end, sch_start} = this.state;\r\n\r\n    \r\n    \r\n    const bg_rgbaColor = rgbString(hsbToRgb(bg_color));\r\n    const text_rgbaColor = rgbString(hsbToRgb(text_color));\r\n    const special_rgbaColor = rgbString(hsbToRgb(special_color));\r\n    \r\n    return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section oneHalf>\r\n              <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button primary onClick={this.onCreate}>Create New Bar</Button>\r\n                  </Stack.Item>\r\n                </Stack>\r\n                {/* <input className=\"jscolor\" value={bg_color_js} onChange={this.onChange.bind(this)}></input> */}\r\n                <div className=\"Polaris-DataTable\">\r\n                  <div className=\"Polaris-DataTable__ScrollContainer\">\r\n                    <table id='bars' className=\"Polaris-DataTable__Table\"> \r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Geo Target</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Excluded Countries</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      { this.state.bars.map((bar, index) => {\r\n                        const { id, name, countries, exclude_countries, is_active } = bar\r\n                        return (\r\n                            <tr className=\"Polaris-DataTable__TableRow\" key={bar.id}>\r\n                              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                                <Stack>\r\n                                  <Stack.Item>\r\n                                    <Badge status={is_active == 1? \"success\": \"attention\"}>{is_active == 1? \"Active\": \"Pending\"}</Badge>\r\n                                  </Stack.Item>\r\n                                  <Stack.Item>\r\n                                    {bar.name}\r\n                                  </Stack.Item>\r\n                                </Stack>\r\n                              </td>\r\n                              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                                  {countries || 'All Countries'}\r\n                              </td>\r\n                              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                                  {exclude_countries || 'N/A'}              \r\n                              </td>\r\n                              <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n                                <ButtonGroup>\r\n                                  <Button size=\"slim\" onClick={this.onEdit.bind(this, bar)} primary>Edit</Button>\r\n                                  <Button size=\"slim\" onClick={this.onDuplicate.bind(this, bar.id)}>Duplicate</Button>\r\n                                  {bar.is_active == 1 ? (\r\n                                    <Button size=\"slim\" onClick={this.onPause.bind(this, {id: bar.id})}>Pause</Button>\r\n                                  ): (\r\n                                    <Button size=\"slim\" onClick={this.onActivate.bind(this,{id: bar.id, shop_id: bar.shop_id})}>\r\n                                    Activate\r\n                                    </Button>\r\n                                  )}\r\n                                  <Button size=\"slim\" onClick={this.onDelete.bind(this, bar.id)} destructive>Delete</Button>\r\n                                </ButtonGroup>\r\n                              </td>\r\n                            </tr>\r\n                        )\r\n                      }) }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n        <div style={{display: showForm? \"block\" : \"none\" }}>\r\n        <Form onSubmit={this.handleSubmit.bind(this)} >\r\n          <Layout>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Basic Template\" sectioned>\r\n                          <FormLayout>\r\n                          {this.state.templates.map((template, index) => {\r\n                            if(template.type == 0){\r\n                              return (\r\n                              <div key={index} className=\"fsb_tp_container\">\r\n                                <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                  backgroundColor: template.bg_color,\r\n                                  color: template.text_color,\r\n                                  textAlign: \"center\",\r\n                                  fontSize: template.font_size,\r\n                                  fontWeight: \"normal\",\r\n                                  lineheight: \"20px\",\r\n                                  padding: \"12px\",\r\n                                  fontFamily: template.font_family\r\n                                  }}  onClick={this.onTemplate.bind(this, template)}>\r\n                                        {template.name}\r\n                                </div>\r\n                              </div>\r\n                              )\r\n                            }\r\n                          })}\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Prenium Template\" sectioned>\r\n                      <FormLayout>\r\n                          {this.state.templates.map((template, index) => {\r\n                            if(template.type == 1){\r\n                              return (\r\n                              <div key={index} className=\"fsb_tp_container\">\r\n                                <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                  background: 'url('+template.img+')',\r\n                                  color: template.text_color,\r\n                                  textAlign: \"center\",\r\n                                  fontSize: template.font_size,\r\n                                  fontWeight: \"normal\",\r\n                                  lineheight: \"20px\",\r\n                                  padding: \"12px\",\r\n                                  fontFamily: template.font_family\r\n                                  }}  onClick={this.onTemplate.bind(this, template)}>\r\n                                        {template.name}\r\n                                </div>\r\n                              </div>\r\n                              )\r\n                            }\r\n                          })}\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <div style={{display: template_id > 0? \"block\" : \"none\" }}>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Preview\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div style={{\r\n                                backgroundImage: 'url(' + this.state.img + ')'\r\n                              }}>\r\n                                <div id=\"fsb_main_bar\" className=\"fsb_tb_content\" style={{\r\n                                  position: \"relative\", \r\n                                  opacity: this.state.bg_color_opacity,\r\n                                  backgroundColor: rgbString(hsbToRgb(this.state.bg_color)),\r\n                                  color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                  textAlign: \"center\",\r\n                                  fontSize: this.state.font_size + 'px',\r\n                                  fontWeight: \"normal\",\r\n                                  lineheight: \"20px\",\r\n                                  padding: this.state.padding + 'px',\r\n                                  fontFamily: this.state.font_family\r\n                                  }} >\r\n                                      {this.state.init_msg_start}\r\n                                      <span style={{\r\n                                        color: rgbString(hsbToRgb(this.state.special_color))\r\n                                      }}> {this.state.cur_symbol}</span>\r\n                                      <span style={{\r\n                                        color: rgbString(hsbToRgb(this.state.special_color))\r\n                                        }}>{this.state.goal} </span>\r\n                                        {this.state.init_msg_end}\r\n                                      { this.state.is_close_btn == 'yes' ? (\r\n                                        <div><a id=\"fsb_close\" style={{\r\n                                          color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                          position:\"absolute\",\r\n                                          right:\"8px\",\r\n                                            top:\"50%\",\r\n                                            transform:\"translateY(-50%)\", color:\"#002B38\", \r\n                                            fontFamily: \"Helvertical, Arial, sans-serif\", fontWeight: \"bold\",\r\n                                            fontSize:\"16px\",\r\n                                            textDecoration: \"none\"}}>X\r\n                                            </a>\r\n                                        </div>\r\n                                      ) : ('')}\r\n                                </div>\r\n                            \r\n                              </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div style={{\r\n                                backgroundImage: 'url(' + this.state.img + ')'\r\n                              }}>\r\n                                <div id=\"fsb_main_bar\" className=\"fsb_tb_content\" style={{\r\n                                  position: \"relative\", \r\n                                  opacity: this.state.bg_color_opacity,\r\n                                  backgroundColor: rgbString(hsbToRgb(this.state.bg_color)),\r\n                                  color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                  textAlign: \"center\",\r\n                                  fontSize: this.state.font_size + 'px',\r\n                                  fontWeight: \"normal\",\r\n                                  lineheight: \"20px\",\r\n                                  padding: this.state.padding + 'px',\r\n                                  fontFamily: this.state.font_family\r\n                                  }} >\r\n                                      {this.state.progress_msg_start}\r\n                                      <span style={{\r\n                                        color: rgbString(hsbToRgb(this.state.special_color))\r\n                                      }}> {this.state.cur_symbol}</span>\r\n                                      <span style={{\r\n                                        color: rgbString(hsbToRgb(this.state.special_color))\r\n                                        }}>{this.state.goal-1} </span>\r\n                                       {this.state.progress_msg_end} \r\n                                      { this.state.is_close_btn == 'yes' ? (\r\n                                        <div><a id=\"fsb_close\" style={{\r\n                                          color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                          position:\"absolute\",\r\n                                          right:\"8px\",\r\n                                            top:\"50%\",\r\n                                            transform:\"translateY(-50%)\", color:\"#002B38\", \r\n                                            fontFamily: \"Helvertical, Arial, sans-serif\", fontWeight: \"bold\",\r\n                                            fontSize:\"16px\",\r\n                                            textDecoration: \"none\"}}>X\r\n                                            </a>\r\n                                        </div>\r\n                                      ) : ('')}\r\n                                </div>\r\n                            \r\n                              </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\" style={{display: is_sec_goal == 1? 'block':'none'}}>\r\n                              <div style={{\r\n                                backgroundImage: 'url(' + this.state.img + ')'\r\n                              }}>\r\n                                <div id=\"fsb_main_bar\" className=\"fsb_tb_content\" style={{\r\n                                  position: \"relative\", \r\n                                  opacity: this.state.bg_color_opacity,\r\n                                  backgroundColor: rgbString(hsbToRgb(this.state.bg_color)),\r\n                                  color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                  textAlign: \"center\",\r\n                                  fontSize: this.state.font_size + 'px',\r\n                                  fontWeight: \"normal\",\r\n                                  lineheight: \"20px\",\r\n                                  padding: this.state.padding + 'px',\r\n                                  fontFamily: this.state.font_family\r\n                                  }} >\r\n                                      {this.state.progress_msg_sec_start}\r\n                                      <span style={{\r\n                                        color: rgbString(hsbToRgb(this.state.special_color))\r\n                                      }}> {this.state.cur_symbol}</span>\r\n                                      <span style={{\r\n                                        color: rgbString(hsbToRgb(this.state.special_color))\r\n                                        }}>{this.state.goal_sec-1} </span>\r\n                                       {this.state.progress_msg_sec_end} \r\n                                      { this.state.is_close_btn == 'yes' ? (\r\n                                        <div><a id=\"fsb_close\" style={{\r\n                                          color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                          position:\"absolute\",\r\n                                          right:\"8px\",\r\n                                            top:\"50%\",\r\n                                            transform:\"translateY(-50%)\", color:\"#002B38\", \r\n                                            fontFamily: \"Helvertical, Arial, sans-serif\", fontWeight: \"bold\",\r\n                                            fontSize:\"16px\",\r\n                                            textDecoration: \"none\"}}>X\r\n                                            </a>\r\n                                        </div>\r\n                                      ) : ('')}\r\n                                </div>\r\n                            \r\n                              </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div style={{\r\n                                backgroundImage: 'url(' + this.state.img + ')'\r\n                              }}>\r\n                                <div id=\"fsb_main_bar\" className=\"fsb_tb_content\" style={{\r\n                                  position: \"relative\", \r\n                                  opacity: this.state.bg_color_opacity,\r\n                                  backgroundColor: rgbString(hsbToRgb(this.state.bg_color)),\r\n                                  color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                  textAlign: \"center\",\r\n                                  fontSize: this.state.font_size + 'px',\r\n                                  fontWeight: \"normal\",\r\n                                  lineheight: \"20px\",\r\n                                  padding: this.state.padding + 'px',\r\n                                  fontFamily: this.state.font_family\r\n                                  }} >\r\n                                      {this.state.goal_msg}\r\n                                      { this.state.is_close_btn == 'yes' ? (\r\n                                        <div><a id=\"fsb_close\" style={{\r\n                                          color: rgbString(hsbToRgb(this.state.text_color)),\r\n                                          position:\"absolute\",\r\n                                          right:\"8px\",\r\n                                            top:\"50%\",\r\n                                            transform:\"translateY(-50%)\", color:\"#002B38\", \r\n                                            fontFamily: \"Helvertical, Arial, sans-serif\", fontWeight: \"bold\",\r\n                                            fontSize:\"16px\",\r\n                                            textDecoration: \"none\"}}>X\r\n                                            </a>\r\n                                        </div>\r\n                                      ) : ('')}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card sectioned>\r\n                        <Stack>\r\n                          <Stack.Item fill>\r\n                            <Heading>Content Configuration</Heading>\r\n                          </Stack.Item>\r\n                          <Stack.Item>\r\n                            <Button \r\n                            onClick={this.handleContentToggle}\r\n                            ariaExpanded={content_active}\r\n                            ariaControls=\"content-config\"\r\n                            >\r\n                            Toggle</Button>\r\n                          </Stack.Item>\r\n                        </Stack>\r\n                        <Collapsible\r\n                          open={content_active}\r\n                          id=\"content-config\"\r\n                          transition={{duration: '150ms', timingFunction: 'ease'}}\r\n                        >      \r\n                          <FormLayout>\r\n                          <TextField\r\n                              value={name}\r\n                              onChange={this.handleChange('name')}\r\n                              label=\"Name: \"\r\n                              type=\"text\"\r\n                              helpText=\"For your own internal reference - only you can see it\"\r\n                            />\r\n                            <FormLayout.Group>\r\n                              <Stack alignment=\"center\">\r\n                              <TextField\r\n                                value={goal}\r\n                                onChange={this.handleChange('goal')}\r\n                                label=\"Free Shipping Goal: \"\r\n                                type=\"number\"\r\n                                helpText=\"If no minimum order value is required, please set goal to 0\"\r\n                              />\r\n                              <div style={{display: is_sec_goal == 1? 'none':'block'}}>\r\n                              <Button  primary onClick={this.onSecGoal.bind(this)}>Add Secondary Goal</Button>\r\n                              </div>\r\n                              </Stack>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group >\r\n                            <div style={{display: is_sec_goal == 0? 'none':'block'}}>\r\n                            <Stack alignment=\"center\">\r\n                            <TextField\r\n                              value={goal_sec}\r\n                              onChange={this.handleChange('goal_sec')}\r\n                              label=\"Free Shipping Secondary Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"Secondary goal needs to be greater than the 1st free shipping goal\"\r\n                            />\r\n                            <Button primary onClick={this.onSecGoal.bind(this)}>Remove Secondary Goal</Button>\r\n                            </Stack>\r\n                            </div>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <Stack alignment=\"center\">\r\n                            <TextField\r\n                              value={init_msg_start}\r\n                              onChange={this.handleChange('init_msg_start')}\r\n                              label=\"Initial Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Display when cart is empty\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">${this.state.goal}</div>\r\n                             <TextField\r\n                              value={init_msg_end}\r\n                              onChange={this.handleChange('init_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </Stack>\r\n                            </FormLayout.Group>\r\n                            \r\n                            <FormLayout.Group >\r\n                            <Stack alignment=\"center\">\r\n                            <TextField\r\n                              value={progress_msg_start}\r\n                              onChange={this.handleChange('progress_msg_start')}\r\n                              label=\"Progress Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is less than the goal\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">${this.state.goal-1}</div>\r\n                             <TextField\r\n                              value={progress_msg_end}\r\n                              onChange={this.handleChange('progress_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </Stack>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group >\r\n                            <div style={{display: is_sec_goal == 0? 'none':'block'}}>\r\n                            <Stack alignment=\"center\">\r\n                            <TextField\r\n                              value={progress_msg_sec_start}\r\n                              onChange={this.handleChange('progress_msg__sec_start')}\r\n                              label=\"Progress Message for Secondary Goal:\"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is higher than the 1st goal, but less than the secondary goal\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">${this.state.goal_sec-1}</div>\r\n                             <TextField\r\n                              value={progress_msg_sec_end}\r\n                              onChange={this.handleChange('progress_msg_sec_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </Stack>\r\n                            </div>\r\n                            </FormLayout.Group>\r\n                            \r\n                            <TextField\r\n                              value={goal_msg}\r\n                              onChange={this.handleChange('goal_msg')}\r\n                              label=\"Goal Achieved Message:: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is greater than goal\"\r\n                            />    \r\n                            <Select\r\n                              label=\"Add Link to the Bar (optional):\"\r\n                              options={[\r\n                                {label: 'ON', value: 'on'},\r\n                                {label: 'OFF', value: 'off'},\r\n                              ]}\r\n                              onChange={this.handleChange('link_opt')}\r\n                              value={link_opt}\r\n                              helpText=\"The bar will be clickable after adding a link\"\r\n                            />\r\n                            \r\n                            { this.state.link_opt == 'on' ? (\r\n                              <TextField\r\n                              value={link_url}\r\n                              onChange={this.handleChange('link_url')}\r\n                              label=\"Link URL:\"\r\n                              type=\"text\"\r\n                              helpText=\"This address will be visited after clicking the bar\"\r\n                              />\r\n                            ) : ('') }\r\n                            { this.state.link_opt == 'on' ? ( \r\n                              <Checkbox\r\n                                label=\"Open the link in a NEW tab when clicked\"\r\n                                checked={is_link_new}\r\n                                onChange={this.handleChange('is_link_new')}\r\n                              />\r\n                            ): ('')}\r\n                            <Select\r\n                              label=\"Include Close Button:\"\r\n                              options={[\r\n                                {label: 'YES', value: 'yes'},\r\n                                {label: 'NO', value: 'no'},\r\n                              ]}\r\n                              onChange={this.handleChange('is_close_btn')}\r\n                              value={is_close_btn}\r\n                              helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                            />\r\n                            <ChoiceList\r\n                              title=\"Select a Display Position:\"\r\n                              choices={position_options}\r\n                              selected={position}\r\n                              onChange={this.handleChange('position')}\r\n                            />\r\n                          </FormLayout>\r\n                        </Collapsible>  \r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card sectioned>\r\n              <Stack>\r\n                <Stack.Item fill>\r\n                  <Heading>Currency Configuration</Heading>\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <Button \r\n                  onClick={this.handleCurrencyToggle}\r\n                  ariaExpanded={cur_active}\r\n                  ariaControls=\"cur-setting\"\r\n                  >\r\n                  Toggle</Button>\r\n                </Stack.Item>\r\n              </Stack>\r\n              <Collapsible\r\n                open={cur_active}\r\n                id=\"cur-setting\"\r\n                transition={{duration: '150ms', timingFunction: 'ease'}}\r\n              >\r\n                <FormLayout>\r\n                    <Select\r\n                      label=\"Currency:\"\r\n                      options={currencies}\r\n                      onChange={this.onCurrency.bind(this)}\r\n                      value={currency}\r\n                      helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                     />      \r\n                     <TextField\r\n                              value={cur_symbol}\r\n                              onChange={this.handleChange('cur_symbol')}\r\n                              label=\"Currency Symbol::\"\r\n                              type=\"text\"\r\n                      />         \r\n                      <Select\r\n                      label=\"Auto Currency Conversion::\"\r\n                      options={[\r\n                        {label: 'OFF', value: 'off'},\r\n                        {label: 'ON', value: 'on'}\r\n                      ]}\r\n                      onChange={this.onAutoCurrency.bind(this)}\r\n                      value={is_auto_cur}\r\n                      helpText=\"NOTE: If native Shopify multi-currencies is configured on your store, this Currency Configuration will be disabled. You can enable this if your website supports auto-currency detection. FSB auto-converts the goal value to the visitors' local currency\"\r\n                      />\r\n                </FormLayout>\r\n              </Collapsible>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card sectioned>\r\n              <Stack>\r\n                <Stack.Item fill>\r\n                  <Heading>Style Configuration</Heading>\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <Button \r\n                  onClick={this.handleStyleToggle}\r\n                  ariaExpanded={style_active}\r\n                  ariaControls=\"style-config\"\r\n                  >\r\n                  Toggle</Button>\r\n                </Stack.Item>\r\n              </Stack>\r\n              <Collapsible\r\n                open={style_active}\r\n                id=\"style-config\"\r\n                transition={{duration: '150ms', timingFunction: 'ease'}}\r\n              >\r\n                <FormLayout>\r\n                <FormLayout.Group>\r\n                    <Popover\r\n                        active={bg_popoverActive}\r\n                        activator={ \r\n                            <Button onClick={this.handlePopoverOpen_bg}>\r\n                              <Stack alignment=\"center\" spacing=\"tight\">\r\n                                <div\r\n                                  style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    borderRadius: \"0.3rem\",\r\n                                    background: bg_rgbaColor\r\n                                  }}\r\n                                />\r\n                                <span>Background Color</span>\r\n                              </Stack>\r\n                            </Button>\r\n                        }\r\n                        onClose={this.handlePopoverClose_bg}\r\n                      >\r\n                        <Popover.Section>\r\n                          <ColorPicker\r\n                            onChange={this.handleColorChange_bg.bind(this)}\r\n                            color={bg_color}\r\n                            allowAlpha\r\n                          />\r\n                        </Popover.Section>\r\n                        <Popover.Section>\r\n                          <TextField value={bg_rgbaColor} onChange={this.handleRgbChange_bg.bind(this)} />\r\n                        </Popover.Section>\r\n                    </Popover>\r\n                    <Popover\r\n                        active={text_popoverActive}\r\n                        activator={ \r\n                            <Button onClick={this.handlePopoverOpen_text}>\r\n                              <Stack alignment=\"center\" spacing=\"tight\">\r\n                                <div\r\n                                  style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    borderRadius: \"0.3rem\",\r\n                                    background: text_rgbaColor\r\n                                  }}\r\n                                />\r\n                                <span>Text Color</span>\r\n                              </Stack>\r\n                            </Button>\r\n                        }\r\n                        onClose={this.handlePopoverClose_text}\r\n                      >\r\n                        <Popover.Section>\r\n                          <ColorPicker\r\n                            onChange={this.handleColorChange_text}\r\n                            color={text_color}\r\n                            allowAlpha={false}\r\n                          />\r\n                        </Popover.Section>\r\n                        <Popover.Section>\r\n                          <TextField value={text_rgbaColor} onChange={this.handleRgbChange_text} />\r\n                        </Popover.Section>\r\n                    </Popover>\r\n                    <Popover\r\n                        active={special_popoverActive}\r\n                        activator={ \r\n                            <Button onClick={this.handlePopoverOpen_special}>\r\n                              <Stack alignment=\"center\" spacing=\"tight\">\r\n                                <div\r\n                                  style={{\r\n                                    height: \"2rem\",\r\n                                    width: \"2rem\",\r\n                                    borderRadius: \"0.3rem\",\r\n                                    background: special_rgbaColor\r\n                                  }}\r\n                                />\r\n                                <span>Special Color</span>\r\n                              </Stack>\r\n                            </Button>\r\n                        }\r\n                        onClose={this.handlePopoverClose_special}\r\n                      >\r\n                        <Popover.Section>\r\n                          <ColorPicker\r\n                            onChange={this.handleColorChange_special}\r\n                            color={special_color}\r\n                            allowAlpha={false}\r\n                          />\r\n                        </Popover.Section>\r\n                        <Popover.Section>\r\n                          <TextField value={special_rgbaColor} onChange={this.handleRgbChange_special} />\r\n                        </Popover.Section>\r\n                    </Popover>\r\n                </FormLayout.Group>\r\n                    {/* <RangeSlider\r\n                      label=\"Background Color Opacity:\"\r\n                      value={bg_color_opacity}\r\n                      min={0}\r\n                      max={1}\r\n                      step={0.01}\r\n                      onChange={this.handleChange('bg_color_opacity')}\r\n                      output\r\n                    /> */}\r\n                    Background Images:\r\n                    <FormLayout.Group>\r\n                    <Stack>\r\n                    {this.state.backgrounds.map((background, index) => {\r\n                              return (\r\n                                <div key={index} style={{ \r\n                                  cursor: \"pointer\",\r\n                                  margin: \"10px 0\", \r\n                                  padding:\"10px 50px\",\r\n                                  textAlign: \"center\",\r\n                                   fontSize:background.font_size, \r\n                                   color:background.text_color, \r\n                                   fontFamily:background.font_family, \r\n                                   background: 'url('+background.img+')'\r\n                                   }} onClick={this.onBackgroundSetting.bind(this, background)}>\r\n                                  {background.name}</div>\r\n                              )\r\n                      })}\r\n                    </Stack>\r\n                    </FormLayout.Group>\r\n                    {/* Upload Background Image:\r\n                    <input type=\"file\" style={{marginBottom: \"10px\"}}></input> */}\r\n                </FormLayout>\r\n                  Fonts: \r\n                  <ButtonGroup>\r\n                  {this.state.fonts.map((font, index) => {\r\n                        if(font.name == this.state.font_family){\r\n                          return (\r\n                            <Button primary key={index} calssName=\"fsb_font_btn\"  \r\n                            onClick={this.onFont.bind(this, font)}>\r\n                              <font style={{fontFamily:font.name}}>{font.name}</font>\r\n                              </Button>\r\n                          )\r\n                        }else {\r\n                          return (\r\n                            <Button style={{fontFamily:font.name}} key={index} calssName=\"fsb_font_btn\"  \r\n                            onClick={this.onFont.bind(this, font)}>\r\n                              <font style={{fontFamily:font.name}}>{font.name}</font>\r\n                              </Button>\r\n                          )\r\n                        }\r\n                    })}\r\n                  </ButtonGroup>    \r\n                <FormLayout>\r\n                  <TextField\r\n                      value={font_size}\r\n                      onChange={this.handleChange('font_size')}\r\n                      label=\"Font Size:\"\r\n                      type=\"number\"\r\n                      helperText=\"Bar height is determined by Font Size and Bar Padding\"\r\n                      prefix=\"PX\"\r\n                    />  \r\n                    <TextField\r\n                      value={padding}\r\n                      onChange={this.handleChange('padding')}\r\n                      label=\"Bar Padding:\"\r\n                      type=\"number\"\r\n                      helperText=\"Space between the text and the upper/lower borders\"\r\n                      prefix=\"PX\"\r\n                    />\r\n                    <TextField\r\n                      value={disp_after}\r\n                      onChange={this.handleChange('disp_after')}\r\n                      label=\"Disappear After:\"\r\n                      type=\"text\"\r\n                      helperText=\"Bar will not disappear if set to 0.\"\r\n                      prefix=\"Seconds\"\r\n                    />\r\n                    <TextField\r\n                      value={delay_before}\r\n                      onChange={this.handleChange('delay_before')}\r\n                      label=\"Delay Before Repeating:\"\r\n                      type=\"number\"\r\n                      helperText=\"Wait this many seconds to show Free Shipping Bar again (unless cart value changes)\"\r\n                      prefix=\"Seconds\"\r\n                    />\r\n                    <TextField\r\n                      value={time_fade}\r\n                      onChange={this.handleChange('time_fade')}\r\n                      label=\"Time to Fade In/Out:\"\r\n                      type=\"number\"\r\n                      helperText=\"Bar will not fade if set to 0\"\r\n                      prefix=\"Seconds\"\r\n                    />\r\n                </FormLayout>\r\n              </Collapsible>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                <Card sectioned>\r\n                <Stack>\r\n                <Stack.Item fill>\r\n                  <Heading>Targeting Configuration</Heading>\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                  <Button \r\n                  onClick={this.handleTargetingToggle}\r\n                  ariaExpanded={targeting_active}\r\n                  ariaControls=\"target-config\"\r\n                  >\r\n                  Toggle</Button>\r\n                </Stack.Item>\r\n                </Stack>\r\n                <Collapsible\r\n                  open={targeting_active}\r\n                  id=\"target-config\"\r\n                  transition={{duration: '150ms', timingFunction: 'ease'}}\r\n                >\r\n                  <FormLayout>\r\n                    <ChoiceList\r\n                        title=\"Display on Page:\"\r\n                        choices={display_options}\r\n                        selected={display_page}\r\n                        onChange={this.handleChange('display_page')}\r\n                      />\r\n                      { this.state.display_page == 'url' ? (\r\n                          <TextField\r\n                          value={display_url}\r\n                          onChange={this.handleChange('display_url')}\r\n                          label=\"Display URL: \"\r\n                          type=\"text\"\r\n                          helpText=\"Input the link address above (you can copy and paste the page URL directly into the field)\"\r\n                          />\r\n                      ) : ('')}\r\n                      { this.state.display_page == 'keyword' ? (\r\n                          <TextField\r\n                          value={display_keyword}\r\n                          onChange={this.handleChange('display_keyword')}\r\n                          label=\"Display Keyword: \"\r\n                          type=\"text\"\r\n                          helpText=\"Input the Keywords above. Use commas to separate if there are multiple keywords. The bar displays if any keyword is matched\"\r\n                          />\r\n                      ) : ('')}\r\n                      <ChoiceList\r\n                        title=\"Exclude Page:\"\r\n                        choices={exclude_options}\r\n                        selected={exclude_page}\r\n                        onChange={this.handleChange('exclude_page')}\r\n                      />\r\n                      { this.state.exclude_page == 'url' ? (\r\n                          <TextField\r\n                          value={exclude_url}\r\n                          onChange={this.handleChange('exclude_url')}\r\n                          label=\"Exclude URL: \"\r\n                          type=\"text\"\r\n                          helpText=\"Input the link address above (you can copy and paste the page URL directly into the field)\"\r\n                          />\r\n                      ) : ('')}\r\n                      { this.state.exclude_page == 'keyword' ? (\r\n                          <TextField\r\n                          value={exclude_keyword}\r\n                          onChange={this.handleChange('exclude_keyword')}\r\n                          label=\"Exclude Keyword: \"\r\n                          type=\"text\"\r\n                          helpText=\"Input the Keywords above. Use commas to separate if there are multiple keywords. The bar does not display if any keyword is matched.\"\r\n                          />\r\n                      ) : ('')}\r\n                      <ChoiceList\r\n                        title=\"Device Target:\"\r\n                        choices={dev_target_options}\r\n                        selected={dev_target}\r\n                        onChange={this.handleChange('dev_target')}\r\n                      />\r\n                      <ChoiceList\r\n                        title=\"Display Schedule:\"\r\n                        choices={schedule_options}\r\n                        selected={schedule}\r\n                        onChange={this.handleChange('schedule')}\r\n                      />\r\n                      <div style={{display: this.state.schedule=='yes'? 'block':'none'}}>\r\n                      <Stack>\r\n                      <input type=\"datetime-local\" className=\"datetimepicker\" value={sch_start} onChange={this.onChange_sch_start.bind(this)}></input>\r\n                      -\r\n                      <input type=\"datetime-local\" className=\"datetimepicker\" value={sch_end} onChange={this.onChange_sch_end.bind(this)}></input>\r\n                      </Stack>\r\n                      <Caption>Define the Start Time and End Time of the display period, minimum duration is 24 hours</Caption>\r\n                      </div>\r\n                  </FormLayout>\r\n                </Collapsible>\r\n                </Card>\r\n              </Layout.Section>\r\n            </Layout>\r\n            <Layout>\r\n              <Layout.Section>\r\n                <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Custom Code Configuration</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button \r\n                    onClick={this.handleCustomToggle}\r\n                    ariaExpanded={custome_code_active}\r\n                    ariaControls=\"custom-config\"\r\n                    >\r\n                    Toggle</Button>\r\n                  </Stack.Item>\r\n                  </Stack>\r\n                <Collapsible\r\n                  open={custome_code_active}\r\n                  id=\"custom-config\"\r\n                  transition={{duration: '150ms', timingFunction: 'ease'}}\r\n                >\r\n                  <TextField\r\n                    label=\"Custom Code:\"\r\n                    value={custom_code}\r\n                    onChange={this.handleChange('custom_code')}\r\n                    multiline\r\n                  />\r\n                  <p>Horizontal Zoom: Good for displaying a pattern based background image</p>\r\n                  <p>Vertical Scroll: A Background image scrolled vertically. Good for showing a product image.</p>\r\n                </Collapsible>\r\n                  \r\n                </Card>\r\n              </Layout.Section>\r\n            </Layout>\r\n            <Layout>\r\n              <Layout.Section>\r\n                <Card sectioned>\r\n                  <Stack distribution=\"trailing\">\r\n                    <Button onClick={this.handleCancel.bind(this)}>\r\n                      Cancel\r\n                    </Button>\r\n                    <Button primary submit>\r\n                      Save\r\n                    </Button>\r\n                  </Stack>\r\n                </Card>\r\n              </Layout.Section>\r\n            </Layout>\r\n            </div>\r\n        </Form>\r\n        </div>              \r\n      </Page>\r\n    );\r\n  }\r\n\r\n  init = () => {\r\n\r\n    this.setState({showForm: false})\r\n    this.setState({bar_id: 0})\r\n    this.setState({template_id: 0})\r\n    this.setState({background_id: 0})\r\n\r\n    getBarList().then(datas => {\r\n        this.setState({bars: [...datas]}, () => \r\n        {\r\n        }\r\n      )\r\n      \r\n    })\r\n    getTemplateList().then(datas => {\r\n      this.setState({templates: [...datas]}, \r\n        () => {\r\n        }\r\n      )\r\n    })\r\n    getFontList().then(datas => {\r\n      this.setState({fonts: [...datas]}, \r\n        () => {\r\n        }\r\n      )\r\n    })\r\n    getBackgroundList().then(datas => {\r\n      this.setState({backgrounds: [...datas]}, \r\n        () => {\r\n        }\r\n      )\r\n    })\r\n  }\r\n  onPause = (data) => {\r\n    let pause_data = {id: data.id}\r\n    pauseBar(pause_data).then(rdata => {\r\n      if(rdata.status == \"success\") {\r\n        swal(\"Successfully Paused\", {\r\n          icon: \"success\",\r\n        });\r\n        this.init();\r\n      } else {\r\n        swal(\"Failed\", {\r\n          icon: \"warning\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onActivate = (data) => {\r\n    let activate_data = {id: data.id, shop_id: data.shop_id}\r\n    activateBar(activate_data).then(rdata => {\r\n      if(rdata.status == \"success\") {\r\n        swal(\"Successfully Activated\", {\r\n          icon: \"success\",\r\n        });\r\n        this.init();\r\n      } else {\r\n        swal(\"Failed\", {\r\n          icon: \"warning\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onDuplicate = (id) => {\r\n    duplicateBar(id).then(data => {\r\n      if(data.status == \"success\") {\r\n        swal(\"Successfully Duplicated\", {\r\n          icon: \"success\",\r\n        });\r\n        this.init();\r\n      } else {\r\n        swal(\"Failed\", {\r\n          icon: \"warning\",\r\n        });\r\n      }\r\n    })\r\n  }\r\n  onDelete = (id) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover bar!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    })\r\n    .then((willDelete) => {\r\n      if (willDelete) {\r\n        deleteBar(id).then(data => {\r\n          if(data.status == \"success\") {\r\n            swal(\"Successfully Deleted\", {\r\n              icon: \"success\",\r\n            });\r\n            this.init();\r\n          } else {\r\n            swal(\"Failed\", {\r\n              icon: \"warning\",\r\n            });\r\n          }\r\n        })\r\n      } else {\r\n        return\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCancel = e => {\r\n    e.preventDefault()\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    this.setState({showForm: false})\r\n    return false\r\n  }\r\n\r\n  handleSubmit = e => {\r\n     e.preventDefault()\r\n     console.log(this.state.sch_start)\r\n     let submit_data = {\r\n        shop_id: this.state.shop_id,\r\n        bar_id: this.state.bar_id,\r\n        template_id: this.state.template_id,\r\n        background_id: this.state.background_id,\r\n        img: this.state.img,\r\n        name: this.state.name,\r\n        goal: this.state.goal,\r\n        goal_sec: this.state.is_sec_goal == 1 ? this.state.goal_sec : 0,\r\n        init_msg_start: this.state.init_msg_start,\r\n        init_msg_end: this.state.init_msg_end,\r\n        is_sec_goal: this.state.is_sec_goal, \r\n        progress_msg_sec_start: this.state.progress_msg_sec_start,\r\n        progress_msg_sec_end: this.state.progress_msg_sec_end,\r\n        progress_msg_start: this.state.progress_msg_start,\r\n        progress_msg_end: this.state.progress_msg_end,\r\n        goal_msg: this.state.goal_msg, \r\n        link_opt: this.state.link_opt, \r\n        link_url: this.state.link_url,\r\n        is_link_new: this.state.is_link_new,\r\n        is_close_btn: this.state.is_close_btn,\r\n        position: Array.isArray(this.state.position)? this.state.position[0]: this.state.position, \r\n        currency: this.state.currency,\r\n        cur_symbol: this.state.cur_symbol,\r\n        is_auto_cur: this.state.is_auto_cur,\r\n        bg_color: rgbString(hsbToRgb(this.state.bg_color)),\r\n        text_color: rgbString(hsbToRgb(this.state.text_color)),\r\n        special_color: rgbString(hsbToRgb(this.state.special_color)), \r\n        bg_color_opacity: this.state.bg_color_opacity,\r\n        font_size: this.state.font_size,\r\n        font_family: this.state.font_family,\r\n        padding: this.state.padding,\r\n        disp_after: this.state.disp_after,\r\n        delay_before: this.state.delay_before,\r\n        time_fade: this.state.time_fade,\r\n        display_page: Array.isArray(this.state.display_page)? this.state.display_page[0]: this.state.display_page,\r\n        exclude_page: Array.isArray(this.state.exclude_page)? this.state.exclude_page[0]: this.state.exclude_page,\r\n        dev_target: Array.isArray(this.state.dev_target)? this.state.dev_target[0]: this.state.dev_target,\r\n        schedule: Array.isArray(this.state.schedule)? this.state.schedule[0]: this.state.schedule,\r\n        custom_code: this.state.custom_code,\r\n        display_url: this.state.display_url,\r\n        display_keyword: this.state.display_keyword,\r\n        exclude_keyword: this.state.exclude_keyword,\r\n        exclude_url: this.state.exclude_url,\r\n        sch_start: this.state.sch_start,\r\n        sch_end: this.state.sch_end\r\n     }\r\n     addBar(submit_data).then(data => {\r\n        if(data.status == 'success'){\r\n          this.init();\r\n          swal({\r\n            title: data.err_msg,\r\n            icon: \"success\",\r\n          })\r\n        }else {\r\n          swal({\r\n            title: data.err_msg,\r\n            icon: \"warning\",\r\n          })\r\n        }\r\n     })\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n\r\n  onCreate = () => {\r\n    this.setState({showForm: true})\r\n    this.setState({template_id: 0})\r\n  }\r\n  onEdit = (bar) => {\r\n    this.setState({\r\n      showForm: true,\r\n      shop_id: bar.shop_id,\r\n      bar_id: bar.id,\r\n      template_id: bar.template_id,\r\n      background_id: bar.background_id,\r\n      img: bar.img,\r\n      name: bar.name,\r\n      goal: String(bar.goal),\r\n      goal_sec: String(bar.goal_sec),\r\n      init_msg_start: bar.init_msg_start,\r\n      init_msg_end: bar.init_msg_end,\r\n      is_sec_goal: bar.is_sec_goal, \r\n      progress_msg_sec_start: bar.progress_msg_sec_start,\r\n      progress_msg_sec_end: bar.progress_msg_sec_end,\r\n      progress_msg_start: bar.progress_msg_start,\r\n      progress_msg_end: bar.progress_msg_end,\r\n      goal_msg: bar.goal_msg, \r\n      link_opt: bar.link_opt, \r\n      link_url: bar.link_url,\r\n      is_link_new: bar.is_link_new,\r\n      is_close_btn: bar.is_close_btn,\r\n      position: bar.position, \r\n      currency: bar.currency,\r\n      cur_symbol: bar.cur_symbol,\r\n      is_auto_cur: bar.is_auto_cur,\r\n      bg_color: this.rgbaStringtoHsb(bar.bg_color),\r\n      text_color: this.rgbaStringtoHsb(bar.text_color),\r\n      special_color: this.rgbaStringtoHsb(bar.special_color), \r\n      bg_color_opacity: bar.bg_color_opacity,\r\n      font_size: String(bar.font_size),\r\n      font_family: bar.font_family,\r\n      padding: String(bar.padding),\r\n      disp_after: String(bar.disp_after),\r\n      delay_before: String(bar.delay_before),\r\n      time_fade: String(bar.time_fade),\r\n      display_page: bar.display_page,\r\n      exclude_page: bar.exclude_page,\r\n      dev_target: bar.dev_target,\r\n      schedule: bar.schedule,\r\n      custom_code: bar.custom_code,\r\n      display_keyword: bar.display_keyword,\r\n      display_url: bar.display_url,\r\n      exclude_keyword: bar.exclude_keyword,\r\n      exclude_url: bar.exclude_url,\r\n      sch_start: bar.sch_start,\r\n      sch_end: bar.sch_end\r\n   })\r\n  }\r\n  onTemplate = (template) => {\r\n    this.setState({template_id: template.id})\r\n    if(template.type == 0){\r\n      this.setState({\r\n        bg_color:this.rgbaStringtoHsb(rgbString(this.hexToRgba(template.bg_color, 1))),\r\n        text_color: this.rgbaStringtoHsb(rgbString(this.hexToRgba(template.text_color,1))),\r\n        special_color: this.rgbaStringtoHsb(rgbString(this.hexToRgba(template.special_color,1))),\r\n        font_size: String(template.font_size),\r\n        font_family: template.font_family\r\n      })\r\n    } else {\r\n      this.setState({\r\n        img: template.img,\r\n        bg_color:this.rgbaStringtoHsb(rgbString(this.hexToRgba(template.bg_color, 0))),\r\n        text_color: this.rgbaStringtoHsb(rgbString(this.hexToRgba(template.text_color,1))),\r\n        special_color: this.rgbaStringtoHsb(rgbString(this.hexToRgba(template.special_color,1))),\r\n        font_size: String(template.font_size),\r\n        font_family: template.font_family\r\n      })\r\n    }\r\n  }\r\n\r\n  onBackgroundSetting = (background) => {\r\n    this.setState({background_id: background.id})\r\n    console.log(this.state.bg_color)\r\n    var bg_color_t = this.state.bg_color\r\n    bg_color_t.alpha = \"0\";\r\n    this.setState({bg_color: bg_color_t})\r\n    this.setState({\r\n      img: background.img,\r\n      text_color: this.rgbaStringtoHsb(rgbString(this.hexToRgba(background.text_color,1)))\r\n    })\r\n  }\r\n\r\n  onSecGoal = () => {\r\n    this.setState({is_sec_goal: this.state.is_sec_goal==1 ? 0 : 1})\r\n  }\r\n  onCurrency = (value) => {\r\n    let symbolbyCdoe = country_cur_data.filter(item => item.code == value)\r\n    this.setState({currency: value})\r\n    this.setState({cur_symbol: symbolbyCdoe[0].symbol})\r\n  }\r\n  onAutoCurrency = (value) => {\r\n    if(this.state.is_auto_cur == 'off'){\r\n      getShopInfo().then(data => {\r\n        var cur_symbol_item = country_cur_data.filter(item => item.code == data)\r\n        this.setState({currency: data,cur_symbol: cur_symbol_item[0].symbol})\r\n      })\r\n    }\r\n    this.setState({is_auto_cur: this.state.is_auto_cur == 'on'? 'off' : 'on'})\r\n  }\r\n  onFont = (font) => {\r\n    this.setState({font_family: font.name})\r\n  }\r\n}\r\nexport default FreeShippingBar;","const axios = require('axios')\r\nexport const getBackgroundList = () => {\r\n    return axios\r\n                .post('/fsb/api/fsb_backgrounds',{\r\n                },{\r\n                    headers: {'Content-Type': 'application-json'}\r\n                })\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n             \r\n}","\r\nconst axios = require('axios')\r\nexport const getBarList = () => {\r\n    return axios\r\n                .post(`/fsb/api/fsb_bardatas`,{\r\n                    headers: {'Content-Type': 'application-json'}\r\n                })\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n             \r\n}\r\n\r\nexport const addBar = (bar) => {\r\n    return axios.post(`/fsb/api/fsb_addbar`,{bar})\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n}\r\nexport const duplicateBar = (id) => {\r\n    return axios.post(`/fsb/api/fsb_duplicatebar`, {id})\r\n                .then((res) => {\r\n                    return res.data\r\n                })\r\n}\r\nexport const deleteBar = (id) => {\r\n    return axios.post(`/fsb/api/fsb_deletebar`, {id})\r\n                .then((res) => {\r\n                    return res.data\r\n                })\r\n}\r\nexport const activateBar = (data) => {\r\n    return axios.post(`/fsb/api/fsb_activate`, {data})\r\n           .then((res) => {\r\n               return res.data\r\n           })\r\n}\r\nexport const pauseBar = (data) => {\r\n    return axios.post(`/fsb/api/fsb_pause`, {data})\r\n           .then((res) => {\r\n               return res.data\r\n           })\r\n}\r\n","\r\nconst axios = require('axios')\r\nexport const getFontList = () => {\r\n    return axios\r\n                .post(`/fsb/api/fsb_fonts`,{\r\n                    headers: {'Content-Type': 'application-json'}\r\n                })\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n             \r\n}","\r\nconst axios = require('axios')\r\nexport const getShopInfo = () => {\r\n    let url = \"/fsb/api/get_shop_info\"\r\n    return axios\r\n                .post(url, {\r\n                    headers: {'Content-Type': 'application-json'}\r\n                })\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n}","\r\nconst axios = require('axios')\r\nexport const getTemplateList = () => {\r\n    return axios\r\n                .post(`/fsb/api/fsb_templates`,{\r\n                    headers: {'Content-Type': 'application-json'}\r\n                })\r\n                .then(res => {\r\n                    return res.data\r\n                })\r\n             \r\n}","module.exports = require(\"@shopify/javascript-utilities/decorators\");","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"axios\");","module.exports = require(\"country-currency-data\");","module.exports = require(\"graphql\");","module.exports = require(\"node-datetime\");","module.exports = require(\"react\");","module.exports = require(\"sweetalert\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7PA;AAwBA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAiKA;AAAA;AAAA;AACA;AACA;AAnKA;AAoKA;AAAA;AAAA;AACA;AACA;AAtKA;AAuKA;AAAA;AAAA;AACA;AACA;AAzKA;AA0KA;AAAA;AAAA;AACA;AACA;AA5KA;AA6KA;AAAA;AAAA;AACA;AACA;AA/KA;AAgLA;AAAA;AAAA;AACA;AACA;AAlLA;AAmLA;AAAA;AAAA;AACA;AACA;AArLA;AAsLA;AAAA;AAAA;AACA;AACA;AAxLA;AAgNA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AA1NA;AA4NA;AAAA;AAAA;AACA;AACA;AA9NA;AAgOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA1OA;AA4OA;AAAA;AAAA;AACA;AACA;AA9OA;AAgPA;AAAA;AAAA;AACA;AACA;AAlPA;AAoPA;AAAA;AAAA;AACA;AACA;AAtPA;AAwPA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AAhQA;AAkQA;AAAA;AAAA;AACA;AACA;AApQA;AAsQA;AAAA;AAAA;AACA;AACA;AAxQA;AA0QA;AAAA;AAAA;AACA;AACA;AA5QA;AA8QA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AAtRA;AAwRA;AAAA;AAAA;AACA;AACA;AA1RA;AA4RA;AAAA;AAAA;AACA;AACA;AA9RA;AAqpCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAprCA;AAqrCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAnsCA;AAosCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAltCA;AAmtCA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAhuCA;AAiuCA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3vCA;AA6vCA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnwCA;AAqwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAr0CA;AAs0CA;AAAA;AAAA;AACA;AACA;AAx0CA;AA00CA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA70CA;AA80CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAgDA;AACA;AA/3CA;AAg4CA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAp5CA;AAs5CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAh6CA;AAk6CA;AAAA;AAAA;AACA;AACA;AAp6CA;AAq6CA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAz6CA;AA06CA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAl7CA;AAm7CA;AAAA;AAAA;AACA;AACA;AAn7CA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzGA;AA4GA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAIA;AAGA;AACA;AA0BA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAiFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAOA;AAAA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAKA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AATA;AAcA;AACA;AAIA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AATA;AAcA;AACA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAaA;AACA;AADA;AAAA;AAGA;AACA;AADA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AARA;AAAA;AAgBA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAaA;AACA;AADA;AAAA;AAGA;AACA;AADA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AARA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAaA;AACA;AADA;AAAA;AAGA;AACA;AADA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AARA;AAAA;AAgBA;AAAA;AACA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAcA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AARA;AAAA;AAqBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AARA;AAaA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AAJA;AAaA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AARA;AAiBA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAYA;AAjBA;AAqBA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAYA;AAjBA;AAqBA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAYA;AAjBA;AAqBA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AATA;AAYA;AASA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAeA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAYA;AACA;AAnpCA;AACA;AAs7CA;;;;;;;;;;;;ACx+CA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AADA;AAIA;AACA;AAEA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;ACzCA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AAEA;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AACA;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AADA;AAIA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}