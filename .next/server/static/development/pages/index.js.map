{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/index.js","webpack:///external \"@shopify/polaris\"","webpack:///external \"graphql\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  FormLayout,\r\n  Layout,\r\n  Page,\r\n  SettingToggle,\r\n  Stack,\r\n  TextField,\r\n  TextStyle,\r\n  DataTable,\r\n  Heading,\r\n  Badge,\r\n  Select,\r\n  Checkbox,\r\n  ChoiceList,\r\n  ColorPicker,\r\n  Popover,\r\n  RangeSlider\r\n} from '@shopify/polaris';\r\n\r\n//import dynamic from 'next/dynamic'\r\n\r\n// const RcolorPicker = dynamic(\r\n//   () => import('react-input-colorpicker'),\r\n//   { ssr: false }\r\n// )\r\n//import RcolorPicker from 'react-input-colorpicker';\r\n\r\nimport {hsbToHex, rgbToHsb} from '@shopify/polaris';\r\nimport fsbStyles from './styles/free-shipping-bar.module.css';\r\nimport { LoneAnonymousOperationRule } from 'graphql';\r\n\r\n\r\nclass FreeShippingBar extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        bars: [\r\n            { id: 1, name: 'My first shipping bar 1',active:0 },\r\n            { id: 2, name: 'My first shipping bar 2',active:1 },\r\n        ],\r\n        templates: [\r\n          { id: 1, name: 'My first shipping template 1', img: 'template1.png' },\r\n          { id: 2, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 3, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 4, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 5, name: 'My first shipping template 2', img: 'template1.png' },\r\n          { id: 6, name: 'My first shipping template 2', img: 'template1.png' },\r\n        ],\r\n        position_options : [\r\n            {label: 'Top bar pushes down the rest of the page', value: 'top_push_v1'},\r\n            {label: 'Top bar pushes down the rest of the page (always visible while scrolling)', value: 'top_push_sticky_v1'},\r\n            {label: 'Top bar overlaps top of the page', value: 'top_cover_nonsticky'},\r\n            {label: ' Top bar overlaps top of the page (always visible while scrolling)', value: 'top_cover'},\r\n            {label: 'Bottom bar overlaps bottom of the page (always visible while scrolling)', value: 'bottom_cover'},\r\n            {label: 'Manual Placement – Allows manual insertion of the bar’s code into your theme.', value: 'inserted'},\r\n        ],\r\n        currencies : [\r\n          {label: 'United states - USD', value: '$'},\r\n          {label: 'Netherland', value: 'nzd'}\r\n        ],\r\n        name: 'My first free shipping bar',\r\n        goal: '100',\r\n        goal_two: '150',\r\n        init_msg_start: 'Free shipping for orders over',\r\n        init_msg_end: '',\r\n        goal_msg: \"Congratulations! You've got free shipping\",\r\n        progress_msg_start: 'Only',\r\n        progress_msg_end: ' away from free shipping',\r\n        link_opt: 'off',\r\n        link_url: 'https://apps.shopify.com/partners/me',\r\n        is_link_new: 0,\r\n        is_close_btn: 'no',\r\n        position: 'top_push_sticky_v1',\r\n        currency: 'nzd',\r\n        cur_symbol: 'nzd',\r\n        is_auto_cur: 'on',\r\n        bg_color: '#312e59',\r\n        text_color: '#22222',\r\n        special_color: '#888888',\r\n        bg_color_opacity: 0.5,\r\n        isColorPickerOpen: false,\r\n        font_size: 14,\r\n        padding: 0,\r\n        disp_after: -1,\r\n        delay_before: 0,\r\n        time_fade: 0,\r\n        display_options : [\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'home'},\r\n          {label: \"Only on Page with URL (Copy and Paste the URL below)\", value: 'url'},\r\n          {label: 'All pages', value: 'keyword'},\r\n        ],\r\n        display_page: 'home',\r\n        exclude_options: [\r\n          {label: 'Do NOT exclude any page', value: 'no'},\r\n          {label: 'Homepage', value: 'home'},\r\n          {label: \"Only exclude Page with URL (Copy and Paste the URL below)\", value: 'url'},\r\n          {label: 'Only exclude Pages that contain the keyword in their URLs', value: 'keyword'},\r\n        ],\r\n        exclude_page: 'no',\r\n        dev_target_options: [\r\n          {label: 'Display on both desktop and mobile browsers. On mobile browsers font size will be capped to achieve optimum display', value: 'desktop'},\r\n          {label: 'Display only on desktop browsers', value: 'desktp'},\r\n          {label: 'HomepageDisplay only on mobile browsers', value: 'mobile'},\r\n        ],\r\n        dev_target: 'all',\r\n        schedule_options: [\r\n          {label: 'Always Display', value: 'yes'},\r\n          {label: 'Only display within the giving period of time', value: 'no'}\r\n        ],\r\n        schedule: 'yes',\r\n        custom_code:''\r\n    };\r\n  }\r\n  render() {\r\n    const { name, goal,goal_two, init_msg_start, init_msg_end, progress_msg_start, progress_msg_end, goal_msg, link_opt, link_url,is_link_new, is_close_btn, position, position_options, currencies, currency,cur_symbol,is_auto_cur, bg_color, text_color, special_color, bg_color_opacity, font_size, padding, disp_after, delay_before, time_fade,display_page,exclude_page,dev_target, display_options,exclude_options, dev_target_options, schedule_options, schedule,custom_code } = this.state;\r\n\r\n    return (\r\n        <Page>\r\n          <Layout>\r\n            <Layout.Section oneHalf>\r\n              <Card sectioned>\r\n                <Stack>\r\n                  <Stack.Item fill>\r\n                    <Heading>Free Shipping Bar (FSB) Dashboard</Heading>\r\n                  </Stack.Item>\r\n                  <Stack.Item>\r\n                    <Button primary>Create New Bar</Button>\r\n                  </Stack.Item>\r\n                </Stack>\r\n                <div className=\"Polaris-DataTable\">\r\n                  <div className=\"Polaris-DataTable__ScrollContainer\">\r\n                    <table id='bars' className=\"Polaris-DataTable__Table\"> \r\n                      <thead>\r\n                        <tr>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Name</th>\r\n                          <th className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop Polaris-DataTable__Cell--firstColumn Polaris-DataTable__Cell--header\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {this.renderDashboardTableData()}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Layout>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Basic Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n              <Layout.Section oneThird>\r\n                      <Card title=\"Prenium Template\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsbStyles.fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      Bold and Clear\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Preview\" sectioned>\r\n                          <FormLayout>\r\n                            <div className=\"fsb_tp_container\">\r\n                              <div className=\"fsb_tb_content\" style={{ \r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                backgroundColor: \"rgb(30, 30, 32)\",\r\n                                color: \"rgb(242, 202, 128)\",\r\n                                textAlign: \"center\",\r\n                                fontSize: \"16px\",\r\n                                fontWeight: \"normal\",\r\n                                lineheight: \"20px\",\r\n                                padding: \"12px\",\r\n                                fontFamily: \"Helvetica\"\r\n                                }}  >\r\n                                      My first shipping bar1\r\n                              </div>\r\n                            </div>\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                      <Card title=\"Content Configuration\" sectioned>\r\n                          <FormLayout>\r\n                          <TextField\r\n                              value={name}\r\n                              onChange={this.handleChange('name')}\r\n                              label=\"Name: \"\r\n                              type=\"text\"\r\n                              helpText=\"For your own internal reference - only you can see it\"\r\n                            />\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={goal}\r\n                              onChange={this.handleChange('goal')}\r\n                              label=\"Free Shipping Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"If no minimum order value is required, please set goal to 0\"\r\n                            />\r\n                            <Button primary>Add Secondary Goal</Button>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={goal_two}\r\n                              onChange={this.handleChange('goal_two')}\r\n                              label=\"Free Shipping Secondary Goal: \"\r\n                              type=\"number\"\r\n                              helpText=\"Secondary goal needs to be greater than the 1st free shipping goal\"\r\n                            />\r\n                            <Button primary>Remove Secondary Goal</Button>\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={init_msg_start}\r\n                              onChange={this.handleChange('init_msg_start')}\r\n                              label=\"Initial Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Display when cart is empty\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">$100</div>\r\n                             <TextField\r\n                              value={init_msg_end}\r\n                              onChange={this.handleChange('init_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                              value={progress_msg_start}\r\n                              onChange={this.handleChange('progress_msg_start')}\r\n                              label=\"Progress Message: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is less than the goal\"\r\n                            />\r\n                            <div className=\"fsb_msg_price\">$99</div>\r\n                             <TextField\r\n                              value={progress_msg_end}\r\n                              onChange={this.handleChange('progress_msg_end')}\r\n                              label=\" \"\r\n                              type=\"text\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <TextField\r\n                              value={goal_msg}\r\n                              onChange={this.handleChange('goal_msg')}\r\n                              label=\"Goal Achieved Message:: \"\r\n                              type=\"text\"\r\n                              helpText=\"Displays when cart value is greater than goal\"\r\n                            />    \r\n                            <Select\r\n                              label=\"Add Link to the Bar (optional):\"\r\n                              options={[\r\n                                {label: 'ON', value: 'on'},\r\n                                {label: 'OFF', value: 'off'},\r\n                              ]}\r\n                              onChange={this.handleChange('link_opt')}\r\n                              value={link_opt}\r\n                              helpText=\"The bar will be clickable after adding a link\"\r\n                            />\r\n                            <TextField\r\n                              value={link_url}\r\n                              onChange={this.handleChange('link_url')}\r\n                              label=\"Link URL:\"\r\n                              type=\"text\"\r\n                              helpText=\"This address will be visited after clicking the bar\"\r\n                            />\r\n                            <Checkbox\r\n                              label=\"Open the link in a NEW tab when clicked\"\r\n                              checked={is_link_new}\r\n                              onChange={this.handleChange('is_link_new')}\r\n                            />\r\n                            <Select\r\n                              label=\"Include Close Button:\"\r\n                              options={[\r\n                                {label: 'YES', value: 'yes'},\r\n                                {label: 'NO', value: 'no'},\r\n                              ]}\r\n                              onChange={this.handleChange('is_close_btn')}\r\n                              value={is_close_btn}\r\n                              helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                            />\r\n                            <ChoiceList\r\n                              title=\"Select a Display Position:\"\r\n                              choices={position_options}\r\n                              selected={position}\r\n                              onChange={this.handleChange('position')}\r\n                            />\r\n                          </FormLayout>\r\n                      </Card>\r\n              </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card title=\"Currency Configuration\" sectioned>\r\n                <FormLayout>\r\n                    <Select\r\n                      label=\"Currency:\"\r\n                      options={currencies}\r\n                      onChange={this.handleChange('currency')}\r\n                      value={currency}\r\n                      helpText='Places an \"x\" button on the bar so that users can close it manually'\r\n                     />      \r\n                     <TextField\r\n                              value={cur_symbol}\r\n                              onChange={this.handleChange('cur_symbol')}\r\n                              label=\"Currency Symbol::\"\r\n                              type=\"text\"\r\n                      />         \r\n                      <Select\r\n                      label=\"Auto Currency Conversion::\"\r\n                      options={[\r\n                        {label: 'OFF', value: 'on'},\r\n                        {label: 'ON', value: 'off'}\r\n                      ]}\r\n                      onChange={this.handleChange('is_auto_cur')}\r\n                      value={is_auto_cur}\r\n                      helpText=\"NOTE: If native Shopify multi-currencies is configured on your store, this Currency Configuration will be disabled. You can enable this if your website supports auto-currency detection. FSB auto-converts the goal value to the visitors' local currency\"\r\n                      />\r\n                </FormLayout>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n            <Layout.Section>\r\n              <Card title=\"Style Configuration\" sectioned>\r\n                <FormLayout>\r\n                    <FormLayout.Group>\r\n                      <ColorPicker label=\"Background Color: \" onChange={this.handleChange('bg_color')} color={bg_color} />\r\n                      <ColorPicker onChange={this.handleChange('text_color')} color={text_color} />\r\n                      <ColorPicker onChange={this.handleChange('special_color')} color={special_color} />\r\n                    </FormLayout.Group>\r\n                    <RangeSlider\r\n                      label=\"Background Color Opacity:\"\r\n                      value={bg_color_opacity}\r\n                      min={0}\r\n                      max={1}\r\n                      step={0.1}\r\n                      onChange={this.handleChange('bg_color_opacity')}\r\n                      output\r\n                    />\r\n                    Background Images:\r\n                    <FormLayout.Group>\r\n                        <a href=\"\" onClick=\"select_background_pic('img/bar_background/20170206_sales_01.png')\">\r\n                          <div style={{ margin: \"10px 0\", padding:\"10px\",textAlign: \"center\", fontSize:\"16px\", color:\"#FFFFFF\", fontFamily:'Roboto', background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"}}>Sales</div>\r\n                        </a>\r\n                        <a href=\"\" onClick=\"select_background_pic('img/bar_background/20170206_sales_01.png')\">\r\n                          <div style={{ margin: \"10px 0\", padding:\"10px\",textAlign: \"center\", fontSize:\"16px\", color:\"#FFFFFF\", fontFamily:'Roboto', background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"}}>Sales</div>\r\n                        </a>\r\n                        <a href=\"\" onClick=\"select_background_pic('img/bar_background/20170206_sales_01.png')\">\r\n                          <div style={{ margin: \"10px 0\", padding:\"10px\",textAlign: \"center\", fontSize:\"16px\", color:\"#FFFFFF\", fontFamily:'Roboto', background: \"url('https://s3.amazonaws.com/lastsecondcoupon/img/bar_background/20170206_sales_01.png')\"}}>Sales</div>\r\n                        </a>\r\n                    </FormLayout.Group>\r\n                    Upload Background Image:\r\n                    <input type=\"file\" style={{marginBottom: \"10px\"}}></input>\r\n                      \r\n                </FormLayout>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button calssName=\"fsb_font_btn\" primary>Helvetica</Button>\r\n                  <Button calssName=\"fsb_font_btn\">Lato</Button>\r\n                  <Button  calssName=\"fsb_font_btn\">Lato</Button>\r\n                <FormLayout>\r\n                  <TextField\r\n                      value={font_size}\r\n                      onChange={this.handleChange('font_size')}\r\n                      label=\"Font Size:\"\r\n                      type=\"number\"\r\n                      helperText=\"Bar height is determined by Font Size and Bar Padding\"\r\n                      prefix=\"PX\"\r\n                    />  \r\n                    <TextField\r\n                      value={padding}\r\n                      onChange={this.handleChange('padding')}\r\n                      label=\"Bar Padding:\"\r\n                      type=\"number\"\r\n                      helperText=\"Space between the text and the upper/lower borders\"\r\n                      prefix=\"PX\"\r\n                    />\r\n                    <TextField\r\n                      value={disp_after}\r\n                      onChange={this.handleChange('disp_after')}\r\n                      label=\"Disappear After:\"\r\n                      type=\"number\"\r\n                      helperText=\"Bar will not disappear if set to 0.\"\r\n                      prefix=\"Seconds\"\r\n                    />\r\n                    <TextField\r\n                      value={delay_before}\r\n                      onChange={this.handleChange('delay_before')}\r\n                      label=\"Delay Before Repeating:\"\r\n                      type=\"number\"\r\n                      helperText=\"Wait this many seconds to show Free Shipping Bar again (unless cart value changes)\"\r\n                      prefix=\"Seconds\"\r\n                    />\r\n                    <TextField\r\n                      value={time_fade}\r\n                      onChange={this.handleChange('time_fade')}\r\n                      label=\"Time to Fade In/Out:\"\r\n                      type=\"number\"\r\n                      helperText=\"Bar will not fade if set to 0\"\r\n                      prefix=\"Seconds\"\r\n                    />\r\n                </FormLayout>\r\n              </Card>\r\n            </Layout.Section>\r\n          </Layout>\r\n          <Layout>\r\n              <Layout.Section>\r\n                <Card title=\"Targeting Configuration\" sectioned>\r\n                  <FormLayout>\r\n                    <ChoiceList\r\n                        title=\"Display on Page:\"\r\n                        choices={display_options}\r\n                        selected={display_page}\r\n                        onChange={this.handleChange('display_page')}\r\n                      />\r\n                      <ChoiceList\r\n                        title=\"Exclude Page:\"\r\n                        choices={exclude_options}\r\n                        selected={exclude_page}\r\n                        onChange={this.handleChange('exclude_page')}\r\n                      />\r\n                      <ChoiceList\r\n                        title=\"Device Target:\"\r\n                        choices={dev_target_options}\r\n                        selected={dev_target}\r\n                        onChange={this.handleChange('dev_target')}\r\n                      />\r\n                      <ChoiceList\r\n                        title=\"Display Schedule:\"\r\n                        choices={schedule_options}\r\n                        selected={schedule}\r\n                        onChange={this.handleChange('schedule')}\r\n                      />\r\n                  </FormLayout>\r\n                </Card>\r\n              </Layout.Section>\r\n            </Layout>\r\n            <Layout>\r\n              <Layout.Section>\r\n                <Card title=\"Custom Code Configuration\" sectioned>\r\n                  <TextField\r\n                    label=\"Custom Code:\"\r\n                    value={custom_code}\r\n                    onChange={this.handleChange('custom_code')}\r\n                    multiline\r\n                  />\r\n                  <p>Horizontal Zoom: Good for displaying a pattern based background image</p>\r\n                  <p>Vertical Scroll: A Background image scrolled vertically. Good for showing a product image.</p>\r\n                </Card>\r\n              </Layout.Section>\r\n            </Layout>\r\n          <Stack distribution=\"trailing\">\r\n              <Button>\r\n                Cancel\r\n              </Button>\r\n              <Button primary submit>\r\n                Save\r\n              </Button>\r\n          </Stack>\r\n        </Form>\r\n      </Page>\r\n    );\r\n  }\r\n  renderDashboardTableData() {\r\n    return this.state.bars.map((bar, index) => {\r\n      const { id, name } = bar\r\n      return (\r\n          <tr className=\"Polaris-DataTable__TableRow\" key={id}>\r\n            <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n              <Stack>\r\n                <Badge status=\"success\">Active</Badge>\r\n                {name}\r\n              </Stack>\r\n            </td>\r\n            <td className=\"Polaris-DataTable__Cell Polaris-DataTable__Cell--verticalAlignTop\">\r\n              <Stack>\r\n                <Button primary>Edit</Button>\r\n                <Button>Duplicate</Button>\r\n                <Button>Activate</Button>\r\n              </Stack>\r\n              </td>\r\n          </tr>\r\n      )\r\n    })\r\n}\r\n  handleSubmit = () => {\r\n    this.setState({\r\n      name: this.state.name,\r\n      goal: this.state.goal\r\n    });\r\n    console.log('submission', this.state);\r\n  };\r\n  handleChange = (field) => {\r\n    return (value) => this.setState({[field]: value});\r\n  };\r\n}\r\nexport default FreeShippingBar;","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"graphql\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAuhBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA7hBA;AA8hBA;AAAA;AAAA;AACA;AACA;AA9heA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAkBA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAeA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAsBA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAqBA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AAJA;AAYA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AARA;AAgcA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAYA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AAAA;AAIA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AAvhBA;AACA;AAiiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrkBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}